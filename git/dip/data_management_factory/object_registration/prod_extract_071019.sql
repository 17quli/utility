MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLACCOUNT' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGACCOUNTKEY' NK_COLUMN_NAMES,'FLNGACCOUNTKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'ACCOUNT.ACCOUNTS(CORE_TAX),ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX),ACCOUNT.ACCOUNTS(WITHHOLDING_TAX),ACCOUNT.ACCOUNTS(SOCIAL_POLICY),ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);"
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLACCOUNTINFO' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGACCOUNTKEY' NK_COLUMN_NAMES,'FLNGACCOUNTKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'ACCOUNT.ACCOUNTS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLCRMLOG' SOURCE_OBJECT_NAME,'TBLCRMEXTENDEDLOG' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGCRMKEY' NK_COLUMN_NAMES,'FLNGCRMKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'SELECT z.flngCrmKey,z.flngVer,z.flngVerLast,z.fstrCrmSource,z.fstrCrmType,z.flngParentCrmKey,z.flngCustomerKey,z.fintProfileNumber,z.flngAccountKey,z.fstrAccountType,z.fdtmFilingPeriod,z.flngBillItemKey,z.fintBillItem,z.flngFolderKey,z.fi64SourceKey,z.fstrSourceId,z.fstrSourceType,z.fstrSourceData,COALESCE(w.fstrExtendedData,z.fstrData) as fstrData,z.fblnExtended,z.fblnPrivate,z.fblnHasChildren,z.fblnHighImportance,z.fblnSystem,z.fstrEditedBy,z.fdtmEdited,z.fstrComment,z.fblnCommentExists,z.fstrWho,z.fdtmWhen FROM NZP_GTAPP.dbo.tblCRMLog z LEFT JOIN NZP_GTAPP.dbo.tblCRMExtendedData w ON z.flngCRMKey =w.flngCRMKey WHERE CONVERT(varchar,fdtmWhen,120) > CONVERT(varchar,CAST (''#LOWDATE#''  AS DATETIME2),120) AND CONVERT(varchar,fdtmWhen,120) <= CONVERT(varchar,CAST (''#HIGHDATE#''  AS DATETIME2),120)' CUSTOM_SQL,'MAX(CASE WHEN FDTMEDITED >= '9000-01-01 00:00:00' THEN '1900-01-01 00:00:00' ELSE FDTMEDITED END, FDTMWHEN)' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLCUSTOMER' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGCUSTOMERKEY' NK_COLUMN_NAMES,'FLNGCUSTOMERKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLCUSTOMERINFO' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGCUSTOMERKEY' NK_COLUMN_NAMES,'FLNGCUSTOMERKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLCUSTOMERLEVEL' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLCUSTOMERMAIL' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGMAILITEMKEY' NK_COLUMN_NAMES,'FLNGMAILITEMKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLCUSTOMERSTD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLDOCPOSTTRANSACTION' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY,FSTRFIELD,FLNGTABLEROW,FLNGDOCVERLAST,FINTPOSTING' NK_COLUMN_NAMES,'FLNGDOCKEY,FSTRFIELD,FLNGTABLEROW,FLNGDOCVERLAST,FDTMWHEN,FINTPOSTING' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'SELECT z.flngDocKey,z.fstrField,z.flngTableRow,z.flngDocVerLast,z.flngVer,z.flngVerLast,z.fintPosting,z.fi64SourceKey,z.fstrSource,z.fstrIdType,z.fstrId,z.fstrNameControl,z.flngCustomerKey,z.flngAccountKey,z.fstrAccountType,z.fdtmFilingPeriod,z.flngBillItemKey,z.fstrBillType,z.fdtmBillDue,z.fstrGroup,z.flngTransKey,z.fstrTransType,z.fdtmEffect,z.fdtmReport,z.fcurAmount,z.fintWorkStatus,z.fblnProcessed,z.fdtmReviewed,z.fdtmPosted,z.fdtmReversed,z.fblnUpdatePeriod,z.fstrWho,z.fdtmWhen FROM NZS_GTAPP.dbo.tblDocPostTransaction z ' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLINDICATOR' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGINDICATORKEY,FLNGVER' NK_COLUMN_NAMES,'FLNGINDICATORKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES,ACCOUNT.ACCOUNTS(CORE_TAX),ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX),ACCOUNT.ACCOUNTS(WITHHOLDING_TAX),ACCOUNT.ACCOUNTS(SOCIAL_POLICY),ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLMAILITEM' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGMAILITEMKEY' NK_COLUMN_NAMES,'FLNGMAILITEMKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLNZ_CALLLOG' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGVISITKEY,FLNGVER' NK_COLUMN_NAMES,'FLNGVISITKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLNZ_CUSTOMERSTD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLNZ_VISITMANAGEDCALL' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLVISIT' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGVISITKEY,FLNGVER' NK_COLUMN_NAMES,'FLNGVISITKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SWRQ' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTWRQ' SCHEMA_NAME,'TBLWEBNOTICE' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGWEBNOTICEKEY' NK_COLUMN_NAMES,'FLNGWEBNOTICEKEY, FDTMWHEN' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SFRD' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTFRD' SCHEMA_NAME,'TBLFRDPLANDATA_1336541184' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGRETURNKEY' NK_COLUMN_NAMES,'FLNGRETURNKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'AUDIT.AUDIT' DATA_DOMAIN,'' CUSTOM_SQL,'' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLNZ_ACCIDGEDU' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLNZ_CSTCOMINFO' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLNZ_CUSTOMERTAXRESIDENCY' SOURCE_OBJECT_NAME,'TBLNZ_CUSTTAXRESIDENCY' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY,FINTSEQ' NK_COLUMN_NAMES,'FLNGDOCKEY,FINTSEQ,FDTMWHEN' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLNZ_ACCIDGOVR' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY,FDTMWHEN' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLNAICS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGNAICSKEY,FLNGVER' NK_COLUMN_NAMES,'FLNGNAICSKEY,FLNGVER,FDTMWHEN' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLNAMERECORD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FI64NAMEKEY,FLNGVER,FDTMEFFECTIVETO' NK_COLUMN_NAMES,'FI64NAMEKEY,FLNGVER,FDTMEFFECTIVETO,FDTMWHEN' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES,ACCOUNT.ACCOUNTS(CORE_TAX),ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX),ACCOUNT.ACCOUNTS(WITHHOLDING_TAX),ACCOUNT.ACCOUNTS(SOCIAL_POLICY),ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTAPP' SCHEMA_NAME,'TBLID' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGIDKEY,FLNGVER' NK_COLUMN_NAMES,'FLNGIDKEY,FLNGVER,FDTMWHEN' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES,ACCOUNT.ACCOUNTS(CORE_TAX),ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX),ACCOUNT.ACCOUNTS(WITHHOLDING_TAX),ACCOUNT.ACCOUNTS(SOCIAL_POLICY),ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTREF' SCHEMA_NAME,'LANCOUNTRY' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRCOUNTRY' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRCOUNTRY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES,ACCOUNT.ACCOUNTS(CORE_TAX),ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX),ACCOUNT.ACCOUNTS(WITHHOLDING_TAX),ACCOUNT.ACCOUNTS(SOCIAL_POLICY),ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTREF' SCHEMA_NAME,'LANCUSTOMERLEVEL' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRCUSTOMERLEVEL' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRCUSTOMERLEVEL' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTREF' SCHEMA_NAME,'LANCUSTOMERSUBTYPE' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRCUSTOMERSUBTYPE' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRCUSTOMERSUBTYPE' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTREF' SCHEMA_NAME,'LANCUSTOMERTYPE' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRCUSTOMERTYPE' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRCUSTOMERTYPE' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTREF' SCHEMA_NAME,'LANNZ_CUSTOMERCLASS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRCUSTOMERCLASS' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRCUSTOMERCLASS' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTREF' SCHEMA_NAME,'LANNZ_CUSTOMERSEGMENTS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRSEGMENT,FSTRLANGUAGE' NK_COLUMN_NAMES,'FSTRSEGMENT,FSTRLANGUAGE' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZS_GTREF' SCHEMA_NAME,'LANOFFICELOCATION' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRDISTRICTOFFICE' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRDISTRICTOFFICE' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'' EFFECTIVE_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.EFFECTIVE_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,EFFECTIVE_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.EFFECTIVE_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.CREATED_BY,VAL.CREATED_DATE);


COMMIT;


CREATE TABLE LCF.EXTRACT_OBJECT_100719 AS SELECT * FROM EXTRACT_OBJECT