--**************************************************************************************************************************************
--**************************************************************************************************************************************
--Script to re-start the load for app_tblPeriodBillItem table.
--We have been notified that tblPeriodBillItem table in START can have silent updates:
--fdtmWhen value doesn't always get update when something changes.
--Therefore the same approach as in TDW has been applied to use fdtmWhen, fdtmPenalty, and fdtmDelta fields to identify changed records.
--Since table in Production is missing records we will drop it, re-create it with one additional field - max_fdtmWhen_Penalty_Delta
--and start loading the table again using the updated Job.
--**************************************************************************************************************************************
--**************************************************************************************************************************************


--Create backup table for app_tblPeriodBillItem Raw table 
create table ${env}_dw.app_tblPeriodBillItem_ird0nxa_${backup_date} stored as parquet as select * from ${env}_raw.app_tblPeriodBillItem; 
compute stats ${env}_dw.app_tblPeriodBillItem_ird0nxa_${backup_date}; 
  
--Confirm number of records in the back up
select count(*) from ${env}_raw.app_tblPeriodBillItem 
union all 
select count(*) from ${env}_dw.app_tblPeriodBillItem_ird0nxa_${backup_date}; 
  
--Create backup table for app_tblPeriodBillItem Journal table 
create table ${env}_dw.app_tblPeriodBillItem_ird0nxa_${backup_date}_jnl stored as parquet as select * from ${env}_jnl.app_tblPeriodBillItem; 
compute stats ${env}_dw.app_tblPeriodBillItem_ird0nxa_${backup_date}_jnl; 
  
--Confirm number of records in the back up
select count(*) from ${env}_jnl.app_tblPeriodBillItem 
union all 
select count(*) from ${env}_dw.app_tblPeriodBillItem_ird0nxa_${backup_date}_jnl;

--Drop Journal Table
drop table ${env}_jnl.app_tblPeriodBillItem;

--Drop Raw Table
drop table ${env}_raw.app_tblPeriodBillItem;

--Re-create Raw Table - DDL copied from E:\GIT\dip\data_management_factory\ddl\impala_raw\create_impala_tables\app_tblperiodbillitem-create.ddl
create table ${var:target_db}.app_tblperiodbillitem (
flngBillItemKey INT,
flngVer INT,
flngVerLast INT,
flngAccountKey INT,
fdtmFilingPeriod TIMESTAMP,
fintBillItem SMALLINT,
fstrBillType VARCHAR(12),
fdtmCreated TIMESTAMP,
fdtmDue TIMESTAMP,
fstrStage VARCHAR(12),
fdtmStaged TIMESTAMP,
fstrPriorStage VARCHAR(12),
fdtmPriorStaged TIMESTAMP,
fdtmNextStageEval TIMESTAMP,
fdtmClosed TIMESTAMP,
fdtmProtest TIMESTAMP,
fdtmFinalized TIMESTAMP,
fcurTax DECIMAL(19,4),
fcurTaxBalance DECIMAL(19,4),
fcurTaxDelta DECIMAL(19,4),
fcurInterest DECIMAL(19,4),
fcurInterestBalance DECIMAL(19,4),
fcurInterestDelta DECIMAL(19,4),
fcurPenalty DECIMAL(19,4),
fcurPenaltyBalance DECIMAL(19,4),
fcurPenaltyDelta DECIMAL(19,4),
fcurOther DECIMAL(19,4),
fcurOtherBalance DECIMAL(19,4),
fcurOtherDelta DECIMAL(19,4),
fcurCredit DECIMAL(19,4),
fcurCreditDelta DECIMAL(19,4),
fcurBalance DECIMAL(19,4),
fdtmBillActivity TIMESTAMP,
fdtmPenalty TIMESTAMP,
fdtmDelta TIMESTAMP,
flngCollectKey INT,
fintTransactionCount SMALLINT,
fstrWho VARCHAR(20),
fdtmWhen TIMESTAMP,
max_fdtmwhen_penalty_delta TIMESTAMP,
record_effective_timestamp TIMESTAMP,
record_expiry_timestamp TIMESTAMP,
record_active_flag VARCHAR(1),
record_deleted_flag VARCHAR(1),
insert_object_run_key INT,
update_object_run_key INT
 ) stored as parquet;
 
 --Compute stats
compute stats ${env}_raw.app_tblPeriodBillItem

--Describe table
describe ${env}_raw.app_tblPeriodBillItem
 
--Check number of records in the Raw tabel - should be zero
select count(*) from ${env}_raw.app_tblPeriodBillItem

--Check number of records in the Journal tabel - should get an error as Journal table should not exist as it was droped.
select count(*) from ${env}_jnl.app_tblPeriodBillItem