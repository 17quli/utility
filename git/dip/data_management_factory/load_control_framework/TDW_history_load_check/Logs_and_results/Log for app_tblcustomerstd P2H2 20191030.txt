1                                                          The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

1          ;*';*";*/;quit;run;
2          OPTIONS PAGENO=MIN;
3          %LET _CLIENTTASKLABEL='app_tblcustomerstd P2H2 20191030';
4          %LET _CLIENTPROCESSFLOWNAME='Process Flow';
5          %LET _CLIENTPROJECTPATH='';
6          %LET _CLIENTPROJECTPATHHOST='';
7          %LET _CLIENTPROJECTNAME='';
8          %LET _SASPROGRAMFILE='H:\DIP Data Management\Load Control Framework\3.8\app_tblcustomerstd P2H2 20191030.sas';
9          %LET _SASPROGRAMFILEHOST='IRDTS64';
10         
11         ODS _ALL_ CLOSE;
12         OPTIONS DEV=PNG;
13         FILENAME EGSR TEMP;
14         ODS tagsets.sasreport13(ID=EGSR) FILE=EGSR
15             STYLE=HTMLBlue
16             STYLESHEET=(URL="file:///H:/sso/sfw/sas_factory/940/x86/SASEnterpriseGuide/7.1/Styles/HTMLBlue.css")
17             NOGTITLE
18             NOGFOOTNOTE
19             GPATH=&sasworklocation
20             ENCODING=UTF8
21             options(rolap="on")
22         ;
NOTE: Writing TAGSETS.SASREPORT13(EGSR) Body file: EGSR
23         
24         /****************************************************************************
25          * Job:             app_tblcustomerstd P2H2               A5IKCEC7.BR000015 *
26          * Description:                                                             *
27          *                                                                          *
28          * Metadata Server: ird10119au.vsp.sas.com                                  *
29          * Port:            8561                                                    *
30          * Location:        /IRD/DIP Data Management/5000 Processes/10 Raw          *
31          *                   Ingestion                                              *
32          *                                                                          *
33          * Server:          SASApp                                A5IKCEC7.AS000002 *
34          *                                                                          *
35          * Source Table:    tblCustomerSTD -                      A5IKCEC7.BE00002B *
36          *                   strapp.tblCustomerSTD                                  *
37          * Target Table:    app_tblcustomerstd -                  A5IKCEC7.BE00001B *
38          *                   impraw.app_tblcustomerstd                              *
39          *                                                                          *
40          * Generated on:    Wednesday, October 30, 2019 3:45:27 PM NZDT             *
41          * Generated by:    ird0nxa                                                 *
42          * Version:         SAS Data Integration Studio 4.903                       *
43          ****************************************************************************/
44         
45         /* Generate the process id for job  */
46         %put Process ID: &SYSJOBID;
Process ID: 61170
47         
48         /* General macro variables  */
49         %let jobID = %quote(A5IKCEC7.BR000015);
50         %let etls_jobName = %nrquote(app_tblcustomerstd P2H2);
51         %let etls_userID = %nrquote(ird0nxa);
52         
53         /* Setup to capture return codes  */
54         %global job_rc trans_rc sqlrc;
55         %let sysrc = 0;
56         %let job_rc = 0;
2                                                          The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

57         %let trans_rc = 0;
58         %let sqlrc = 0;
59         %global etls_stepStartTime;
60         /* initialize syserr to 0 */
61         data _null_; run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      user cpu time       0.00 seconds
      system cpu time     0.00 seconds
      memory              316.68k
      OS Memory           18852.00k
      Timestamp           30/10/2019 03:54:47 PM
      Step Count                        2  Switch Count  0
      Page Faults                       0
      Page Reclaims                     55
      Page Swaps                        0
      Voluntary Context Switches        0
      Involuntary Context Switches      0
      Block Input Operations            0
      Block Output Operations           0
      

62         
63         %macro rcSet(error);
64            %if (&error gt &trans_rc) %then
65               %let trans_rc = &error;
66            %if (&error gt &job_rc) %then
67               %let job_rc = &error;
68         %mend rcSet;
69         
70         %macro rcSetDS(error);
71            if &error gt input(symget('trans_rc'),12.) then
72               call symput('trans_rc',trim(left(put(&error,12.))));
73            if &error gt input(symget('job_rc'),12.) then
74               call symput('job_rc',trim(left(put(&error,12.))));
75         %mend rcSetDS;
76         
77         /* Setup for capturing job status  */
78         %let etls_startTime = %sysfunc(datetime(),datetime.);
79         %let etls_recordsBefore = 0;
80         %let etls_recordsAfter = 0;
81         %let etls_lib = 0;
82         %let etls_table = 0;
83         
84         %global etls_debug;
85         %macro etls_setDebug;
86            %if %str(&etls_debug) ne 0 %then
87               OPTIONS MPRINT%str(;);
88         %mend;
89         %etls_setDebug;
90         
91         /*==========================================================================*
92          * Step:            Change Extract                        A5IKCEC7.BT00009W *
93          * Transform:       Change Extract                                          *
94          * Description:                                                             *
95          *                                                                          *
96          * Source Table:    tblCustomerSTD -                      A5IKCEC7.BE00002B *
3                                                          The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

97          *                   strapp.tblCustomerSTD                                  *
98          * Target Table:    app_tblcustomerstd -                  A5IKCEC7.BE00001B *
99          *                   impraw.app_tblcustomerstd                              *
100         *==========================================================================*/
101        
102        %let transformID = %quote(A5IKCEC7.BT00009W);
103        %let trans_rc = 0;
104        %let etls_stepStartTime = %sysfunc(datetime(), datetime20.);
105        
106        /* Access the data for START GTAPP (strapp)  */
107        LIBNAME strapp SQLSVR  PRESERVE_TAB_NAMES=YES  DBMAX_TEXT=32767  PRESERVE_COL_NAMES=YES  Datasrc=NZO_GTAPP  SCHEMA=dbo
107      ! AUTHDOMAIN="start_operations" ;
NOTE:  Credential could not be obtained from Viya credentials service.
NOTE:  Credential obtained from SAS metadata server.
NOTE: Libref STRAPP was successfully assigned as follows: 
      Engine:        SQLSVR 
      Physical Name: NZO_GTAPP
108        %rcSet(&syslibrc);
109        
110        /* Access the data for DIP Impala RAW (impraw)  */
111        LIBNAME impraw SASIOIMP  DATABASE=dev_raw  DBMAX_TEXT=32767  DSN=ClouderaImpala64  SCHEMA=dev_raw ;
NOTE: DATABASE= and SCHEMA= now represent the same option. The value of the SCHEMA option will be used.
NOTE: Libref IMPRAW was successfully assigned as follows: 
      Engine:        IMPALA 
      Physical Name: ClouderaImpala64
112        %rcSet(&syslibrc);
113        
114        %let SYSLAST = %nrquote(strapp.tblCustomerSTD);
115        
116        %let _INPUT_count = 1;
117        %let _INPUT = strapp.tblCustomerSTD;
118        %let _INPUT_connect =  DBMAX_TEXT=32767 DATASRC=NZO_GTAPP AUTHDOMAIN="start_operations"
119        ;
120        %let _INPUT_engine = SQLSVR;
121        %let _INPUT_memtype = DATA;
122        %let _INPUT_options = %nrquote();
123        %let _INPUT_alter = %nrquote();
124        %let _INPUT_path = %nrquote(/IRD/DIP Data Management/3000 Repositories/START/START GTAPP/tblCustomerSTD%(Table%));
125        %let _INPUT_type = 1;
126        %let _INPUT_label = %nrquote();
127        
128        %let _Source = strapp.tblCustomerSTD;
129        %let _Source_connect =  DBMAX_TEXT=32767 DATASRC=NZO_GTAPP AUTHDOMAIN="start_operations"
130        ;
131        %let _Source_engine = SQLSVR;
132        %let _Source_memtype = DATA;
133        %let _Source_options = %nrquote();
134        %let _Source_alter = %nrquote();
135        %let _Source_path = %nrquote(/IRD/DIP Data Management/3000 Repositories/START/START GTAPP/tblCustomerSTD%(Table%));
136        %let _Source_type = 1;
137        %let _Source_label = %nrquote();
138        
139        %let _OUTPUT_count = 1;
140        %let _OUTPUT = impraw.app_tblcustomerstd;
141        %let _OUTPUT_connect =  DBMAX_TEXT=32767 DATABASE=dev_raw DSN=ClouderaImpala64
142        ;
143        %let _OUTPUT_engine = SASIOIMP;
144        %let _OUTPUT_memtype = DATA;
4                                                          The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

145        %let _OUTPUT_options = %nrquote();
146        %let _OUTPUT_alter = %nrquote();
147        %let _OUTPUT_path = %nrquote(/IRD/DIP Data Management/3000 Repositories/DIP/DIP Impala Raw/app_tblcustomerstd%(Table%));
148        %let _OUTPUT_type = 1;
149        %let _OUTPUT_label = %nrquote();
150        /* List of target columns to keep  */
151        %let _OUTPUT_keep = flngdockey fdtmdob fdtmdod fstrwho fdtmwhen record_effective_timestamp
152                record_expiry_timestamp record_active_flag record_deleted_flag
153                insert_object_run_key update_object_run_key;
154        %let _OUTPUT_col_count = 11;
155        %let _OUTPUT_col0_name = flngdockey;
156        %let _OUTPUT_col0_table = impraw.app_tblcustomerstd;
157        %let _OUTPUT_col0_length = 8;
158        %let _OUTPUT_col0_type = ;
159        %let _OUTPUT_col0_format = ;
160        %let _OUTPUT_col0_informat = ;
161        %let _OUTPUT_col0_label = %nrquote(flngdockey);
162        %let _OUTPUT_col0_input0 = FLNGDOCKEY;
163        %let _OUTPUT_col0_input0_table = strapp.tblCustomerSTD;
164        %let _OUTPUT_col0_exp = ;
165        %let _OUTPUT_col0_input = FLNGDOCKEY;
166        %let _OUTPUT_col0_input_count = 1;
167        %let _OUTPUT_col1_name = fdtmdob;
168        %let _OUTPUT_col1_table = impraw.app_tblcustomerstd;
169        %let _OUTPUT_col1_length = 8;
170        %let _OUTPUT_col1_type = ;
171        %let _OUTPUT_col1_format = datetime22.3;
172        %let _OUTPUT_col1_informat = ;
173        %let _OUTPUT_col1_label = %nrquote(fdtmdob);
174        %let _OUTPUT_col1_input0 = FDTMDOB;
175        %let _OUTPUT_col1_input0_table = strapp.tblCustomerSTD;
176        %let _OUTPUT_col1_exp = ;
177        %let _OUTPUT_col1_input = FDTMDOB;
178        %let _OUTPUT_col1_input_count = 1;
179        %let _OUTPUT_col2_name = fdtmdod;
180        %let _OUTPUT_col2_table = impraw.app_tblcustomerstd;
181        %let _OUTPUT_col2_length = 8;
182        %let _OUTPUT_col2_type = ;
183        %let _OUTPUT_col2_format = datetime22.3;
184        %let _OUTPUT_col2_informat = ;
185        %let _OUTPUT_col2_label = %nrquote(fdtmdod);
186        %let _OUTPUT_col2_input0 = FDTMDOD;
187        %let _OUTPUT_col2_input0_table = strapp.tblCustomerSTD;
188        %let _OUTPUT_col2_exp = ;
189        %let _OUTPUT_col2_input = FDTMDOD;
190        %let _OUTPUT_col2_input_count = 1;
191        %let _OUTPUT_col3_name = fstrwho;
192        %let _OUTPUT_col3_table = impraw.app_tblcustomerstd;
193        %let _OUTPUT_col3_length = 20;
194        %let _OUTPUT_col3_type = $;
195        %let _OUTPUT_col3_format = ;
196        %let _OUTPUT_col3_informat = ;
197        %let _OUTPUT_col3_label = %nrquote(fstrwho);
198        %let _OUTPUT_col3_input0 = FSTRWHO;
199        %let _OUTPUT_col3_input0_table = strapp.tblCustomerSTD;
200        %let _OUTPUT_col3_exp = ;
201        %let _OUTPUT_col3_input = FSTRWHO;
202        %let _OUTPUT_col3_input_count = 1;
5                                                          The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

203        %let _OUTPUT_col4_name = fdtmwhen;
204        %let _OUTPUT_col4_table = impraw.app_tblcustomerstd;
205        %let _OUTPUT_col4_length = 8;
206        %let _OUTPUT_col4_type = ;
207        %let _OUTPUT_col4_format = datetime22.3;
208        %let _OUTPUT_col4_informat = ;
209        %let _OUTPUT_col4_label = %nrquote(fdtmwhen);
210        %let _OUTPUT_col4_input0 = FDTMWHEN;
211        %let _OUTPUT_col4_input0_table = strapp.tblCustomerSTD;
212        %let _OUTPUT_col4_exp = ;
213        %let _OUTPUT_col4_input = FDTMWHEN;
214        %let _OUTPUT_col4_input_count = 1;
215        %let _OUTPUT_col5_name = record_effective_timestamp;
216        %let _OUTPUT_col5_table = impraw.app_tblcustomerstd;
217        %let _OUTPUT_col5_length = 8;
218        %let _OUTPUT_col5_type = ;
219        %let _OUTPUT_col5_format = datetime22.3;
220        %let _OUTPUT_col5_informat = ;
221        %let _OUTPUT_col5_label = %nrquote(record_effective_timestamp);
222        %let _OUTPUT_col5_exp = ;
223        %let _OUTPUT_col5_input_count = 0;
224        %let _OUTPUT_col6_name = record_expiry_timestamp;
225        %let _OUTPUT_col6_table = impraw.app_tblcustomerstd;
226        %let _OUTPUT_col6_length = 8;
227        %let _OUTPUT_col6_type = ;
228        %let _OUTPUT_col6_format = datetime22.3;
229        %let _OUTPUT_col6_informat = ;
230        %let _OUTPUT_col6_label = %nrquote(record_expiry_timestamp);
231        %let _OUTPUT_col6_exp = ;
232        %let _OUTPUT_col6_input_count = 0;
233        %let _OUTPUT_col7_name = record_active_flag;
234        %let _OUTPUT_col7_table = impraw.app_tblcustomerstd;
235        %let _OUTPUT_col7_length = 1;
236        %let _OUTPUT_col7_type = $;
237        %let _OUTPUT_col7_format = ;
238        %let _OUTPUT_col7_informat = ;
239        %let _OUTPUT_col7_label = %nrquote(record_active_flag);
240        %let _OUTPUT_col7_exp = ;
241        %let _OUTPUT_col7_input_count = 0;
242        %let _OUTPUT_col8_name = record_deleted_flag;
243        %let _OUTPUT_col8_table = impraw.app_tblcustomerstd;
244        %let _OUTPUT_col8_length = 1;
245        %let _OUTPUT_col8_type = $;
246        %let _OUTPUT_col8_format = ;
247        %let _OUTPUT_col8_informat = ;
248        %let _OUTPUT_col8_label = %nrquote(record_deleted_flag);
249        %let _OUTPUT_col8_exp = ;
250        %let _OUTPUT_col8_input_count = 0;
251        %let _OUTPUT_col9_name = insert_object_run_key;
252        %let _OUTPUT_col9_table = impraw.app_tblcustomerstd;
253        %let _OUTPUT_col9_length = 8;
254        %let _OUTPUT_col9_type = ;
255        %let _OUTPUT_col9_format = ;
256        %let _OUTPUT_col9_informat = ;
257        %let _OUTPUT_col9_label = %nrquote(insert_object_run_key);
258        %let _OUTPUT_col9_exp = ;
259        %let _OUTPUT_col9_input_count = 0;
260        %let _OUTPUT_col10_name = update_object_run_key;
6                                                          The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

261        %let _OUTPUT_col10_table = impraw.app_tblcustomerstd;
262        %let _OUTPUT_col10_length = 8;
263        %let _OUTPUT_col10_type = ;
264        %let _OUTPUT_col10_format = ;
265        %let _OUTPUT_col10_informat = ;
266        %let _OUTPUT_col10_label = %nrquote(update_object_run_key);
267        %let _OUTPUT_col10_exp = ;
268        %let _OUTPUT_col10_input_count = 0;
269        
270        %let _target = impraw.app_tblcustomerstd;
271        %let _target_connect =  DBMAX_TEXT=32767 DATABASE=dev_raw DSN=ClouderaImpala64
272        ;
273        %let _target_engine = SASIOIMP;
274        %let _target_memtype = DATA;
275        %let _target_options = %nrquote();
276        %let _target_alter = %nrquote();
277        %let _target_path = %nrquote(/IRD/DIP Data Management/3000 Repositories/DIP/DIP Impala Raw/app_tblcustomerstd%(Table%));
278        %let _target_type = 1;
279        %let _target_label = %nrquote();
280        /* List of target columns to keep  */
281        %let _target_keep = flngdockey fdtmdob fdtmdod fstrwho fdtmwhen record_effective_timestamp
282                record_expiry_timestamp record_active_flag record_deleted_flag
283                insert_object_run_key update_object_run_key;
284        %let _target_col_count = 11;
285        %let _target_col0_name = flngdockey;
286        %let _target_col0_table = impraw.app_tblcustomerstd;
287        %let _target_col0_length = 8;
288        %let _target_col0_type = ;
289        %let _target_col0_format = ;
290        %let _target_col0_informat = ;
291        %let _target_col0_label = %nrquote(flngdockey);
292        %let _target_col0_input0 = FLNGDOCKEY;
293        %let _target_col0_input0_table = strapp.tblCustomerSTD;
294        %let _target_col0_exp = ;
295        %let _target_col0_input = FLNGDOCKEY;
296        %let _target_col0_input_count = 1;
297        %let _target_col1_name = fdtmdob;
298        %let _target_col1_table = impraw.app_tblcustomerstd;
299        %let _target_col1_length = 8;
300        %let _target_col1_type = ;
301        %let _target_col1_format = datetime22.3;
302        %let _target_col1_informat = ;
303        %let _target_col1_label = %nrquote(fdtmdob);
304        %let _target_col1_input0 = FDTMDOB;
305        %let _target_col1_input0_table = strapp.tblCustomerSTD;
306        %let _target_col1_exp = ;
307        %let _target_col1_input = FDTMDOB;
308        %let _target_col1_input_count = 1;
309        %let _target_col2_name = fdtmdod;
310        %let _target_col2_table = impraw.app_tblcustomerstd;
311        %let _target_col2_length = 8;
312        %let _target_col2_type = ;
313        %let _target_col2_format = datetime22.3;
314        %let _target_col2_informat = ;
315        %let _target_col2_label = %nrquote(fdtmdod);
316        %let _target_col2_input0 = FDTMDOD;
317        %let _target_col2_input0_table = strapp.tblCustomerSTD;
318        %let _target_col2_exp = ;
7                                                          The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

319        %let _target_col2_input = FDTMDOD;
320        %let _target_col2_input_count = 1;
321        %let _target_col3_name = fstrwho;
322        %let _target_col3_table = impraw.app_tblcustomerstd;
323        %let _target_col3_length = 20;
324        %let _target_col3_type = $;
325        %let _target_col3_format = ;
326        %let _target_col3_informat = ;
327        %let _target_col3_label = %nrquote(fstrwho);
328        %let _target_col3_input0 = FSTRWHO;
329        %let _target_col3_input0_table = strapp.tblCustomerSTD;
330        %let _target_col3_exp = ;
331        %let _target_col3_input = FSTRWHO;
332        %let _target_col3_input_count = 1;
333        %let _target_col4_name = fdtmwhen;
334        %let _target_col4_table = impraw.app_tblcustomerstd;
335        %let _target_col4_length = 8;
336        %let _target_col4_type = ;
337        %let _target_col4_format = datetime22.3;
338        %let _target_col4_informat = ;
339        %let _target_col4_label = %nrquote(fdtmwhen);
340        %let _target_col4_input0 = FDTMWHEN;
341        %let _target_col4_input0_table = strapp.tblCustomerSTD;
342        %let _target_col4_exp = ;
343        %let _target_col4_input = FDTMWHEN;
344        %let _target_col4_input_count = 1;
345        %let _target_col5_name = record_effective_timestamp;
346        %let _target_col5_table = impraw.app_tblcustomerstd;
347        %let _target_col5_length = 8;
348        %let _target_col5_type = ;
349        %let _target_col5_format = datetime22.3;
350        %let _target_col5_informat = ;
351        %let _target_col5_label = %nrquote(record_effective_timestamp);
352        %let _target_col5_exp = ;
353        %let _target_col5_input_count = 0;
354        %let _target_col6_name = record_expiry_timestamp;
355        %let _target_col6_table = impraw.app_tblcustomerstd;
356        %let _target_col6_length = 8;
357        %let _target_col6_type = ;
358        %let _target_col6_format = datetime22.3;
359        %let _target_col6_informat = ;
360        %let _target_col6_label = %nrquote(record_expiry_timestamp);
361        %let _target_col6_exp = ;
362        %let _target_col6_input_count = 0;
363        %let _target_col7_name = record_active_flag;
364        %let _target_col7_table = impraw.app_tblcustomerstd;
365        %let _target_col7_length = 1;
366        %let _target_col7_type = $;
367        %let _target_col7_format = ;
368        %let _target_col7_informat = ;
369        %let _target_col7_label = %nrquote(record_active_flag);
370        %let _target_col7_exp = ;
371        %let _target_col7_input_count = 0;
372        %let _target_col8_name = record_deleted_flag;
373        %let _target_col8_table = impraw.app_tblcustomerstd;
374        %let _target_col8_length = 1;
375        %let _target_col8_type = $;
376        %let _target_col8_format = ;
8                                                          The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

377        %let _target_col8_informat = ;
378        %let _target_col8_label = %nrquote(record_deleted_flag);
379        %let _target_col8_exp = ;
380        %let _target_col8_input_count = 0;
381        %let _target_col9_name = insert_object_run_key;
382        %let _target_col9_table = impraw.app_tblcustomerstd;
383        %let _target_col9_length = 8;
384        %let _target_col9_type = ;
385        %let _target_col9_format = ;
386        %let _target_col9_informat = ;
387        %let _target_col9_label = %nrquote(insert_object_run_key);
388        %let _target_col9_exp = ;
389        %let _target_col9_input_count = 0;
390        %let _target_col10_name = update_object_run_key;
391        %let _target_col10_table = impraw.app_tblcustomerstd;
392        %let _target_col10_length = 8;
393        %let _target_col10_type = ;
394        %let _target_col10_format = ;
395        %let _target_col10_informat = ;
396        %let _target_col10_label = %nrquote(update_object_run_key);
397        %let _target_col10_exp = ;
398        %let _target_col10_input_count = 0;
399        
400        
401        %let ep_key_cols = flngdockey;
402        %let ep_key_cols_count = 1;
403        %let ep_key_cols0 = 1;
404        %let ep_key_cols1 = flngdockey;
405        %let where = ;
406        %let change_capture_timestamp = FDTMWHEN;
407        %let change_capture_timestamp_count = 1;
408        %let change_capture_timestamp0 = 1;
409        %let change_capture_timestamp1 = FDTMWHEN;
410        %let history_type = %nrquote(H2);
411        %let duplication_grain = %nrquote(1);
412        %let h2_effective_column = FDTMWHEN;
413        %let h2_effective_column_count = 1;
414        %let h2_effective_column0 = 1;
415        %let h2_effective_column1 = FDTMWHEN;
416        %let effective_column = fdtmwhen;
417        %let effective_column_count = 1;
418        %let effective_column0 = 1;
419        %let effective_column1 = fdtmwhen;
420        %let to_timestamp = ;
421        %let to_timestamp_count = 0;
422        %let to_timestamp0 = 0;
423        %let effective_timestamp_grain = %nrquote(Seconds);
424        %let purge_grain = %nrquote(1);
425        %let debug = %nrquote(No);
426        %let ep_db_create_opts = %nrquote(with serdeproperties %(%'field.delim%'=%'\u0006%', %'line.delim%'=%'\u0007%',
426      ! %'serialization.format%'=%'\u0006%',%'serialization.escape.crlf%'=%'true%'%) stored as textfile);
427        %let lcf = lcf.OBJECT;
428        %let lcf_connect =  DBMAX_TEXT=32767 DEFER=YES encoding="utf-8" READBUFF=20000 dbclient_max_bytes=2
428      ! PATH="irddev20.vsp.sas.com" AUTHDOMAIN="lcf_dev"
429        ;
430        %let lcf_engine = ORACLE;
431        %let lcf_memtype = DATA;
432        %let lcf_options = %nrquote();
9                                                          The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

433        %let lcf_alter = %nrquote();
434        %let lcf_path = %nrquote(/IRD/DIP Data Management/3000 Repositories/DIP/DIP LCF/OBJECT%(Table%));
435        %let lcf_type = 1;
436        %let lcf_label = %nrquote();
437        %let ep_db_opts_count = %nrquote(1);
438        %let ep_db_opts = %nrquote(stored as parquet);
439        %let ep_db_opts1 = %nrquote(stored as parquet);
440        %let logging = lcf.OBJECT_RUN;
441        %let logging_connect =  DBMAX_TEXT=32767 DEFER=YES encoding="utf-8" READBUFF=20000 dbclient_max_bytes=2
441      ! PATH="irddev20.vsp.sas.com" AUTHDOMAIN="lcf_dev"
442        ;
443        %let logging_engine = ORACLE;
444        %let logging_memtype = DATA;
445        %let logging_options = %nrquote();
446        %let logging_alter = %nrquote();
447        %let logging_path = %nrquote(/IRD/DIP Data Management/3000 Repositories/DIP/DIP LCF/OBJECT_RUN%(Table%));
448        %let logging_type = 1;
449        %let logging_label = %nrquote();
450        /* Access the data for DIP Hive Staging (hivestg)  */
451        LIBNAME hivestg HADOOP  URI="jdbc:hive2://ird26au.vsp.sas.com:10001/;principal=hive/ird26au.vsp.sas.com@VSP.SAS.COM;
451      ! ssl=true;sslTrustStore=/sso/sfw/sas/940/hadoopfiles/DigiAndSAS-CA.jks"  HDFS_TEMPDIR="/env/1_dev/landing/"
451      ! LOGIN_TIMEOUT=0  DEFER=YES
452        PORT=10001 SERVER="ird26au.vsp.sas.com"  SCHEMA=dev_staging ;
NOTE: Libref HIVESTG was successfully assigned as follows: 
      Engine:        HADOOP 
      Physical Name: jdbc:hive2://ird26au.vsp.sas.com:10001/
453        %rcSet(&syslibrc);
454        
455        %let stg_hive_connect =  DEFER=YES URI="jdbc:hive2://ird26au.vsp.sas.com:10001/;
455      ! principal=hive/ird26au.vsp.sas.com@VSP.SAS.COM;ssl=true;sslTrustStore=/sso/sfw/sas/940/hadoopfiles/DigiAndSAS-CA.jks"
455      ! HDFS_TEMPDIR="/env/1_dev/landing/" LOGIN_TIMEOUT=0 SERVER="ird26au.vsp.sas.com"  PORT=10001
456        ;
457        %let stg_hive_engine = HADOOP;
458        %let stg_hive_path = /IRD/DIP Data Management/1000 Libraries/DIP Hive Staging (hivestg)(Library);
459        %let stg_hive = hivestg;
460        /* Access the data for DIP Impala Staging (impstg)  */
461        LIBNAME impstg SASIOIMP  DATABASE=dev_staging  HDFS_TEMPDIR="/env/1_dev/landing/"  DSN=ClouderaImpala64
461      ! SCHEMA=dev_staging ;
NOTE: DATABASE= and SCHEMA= now represent the same option. The value of the SCHEMA option will be used.
NOTE: Libref IMPSTG was successfully assigned as follows: 
      Engine:        IMPALA 
      Physical Name: ClouderaImpala64
462        %rcSet(&syslibrc);
463        
464        %let ep_staging_library_connect =  DATABASE=dev_staging DSN=ClouderaImpala64
465        ;
466        %let ep_staging_library_engine = SASIOIMP;
467        %let ep_staging_library = impstg;
468        %let ep_staging_library_path = /IRD/DIP Data Management/1000 Libraries/DIP Impala Staging (impstg)(Library);
469        %let Source_table_type = %nrquote(view);
470        %let tagsort = %nrquote(No);
471        
472        /* List of target columns to keep  */
473        %let _keep = flngdockey fdtmdob fdtmdod fstrwho fdtmwhen record_effective_timestamp
474                record_expiry_timestamp record_active_flag record_deleted_flag
475                insert_object_run_key update_object_run_key;
476        /* List of target columns to keep  */
477        %let keep = flngdockey fdtmdob fdtmdod fstrwho fdtmwhen record_effective_timestamp
10                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

478                record_expiry_timestamp record_active_flag record_deleted_flag
479                insert_object_run_key update_object_run_key;
480        %change_extract;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   option nosymbolgen nomlogic validvarname=any validmemname=extend spool mprint 
mprintnest nofullstimer notes bufno=3000 bufsize=65535 ibufno=10000 ibufsize=32767 compress=no;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   data _null_;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   i = 0;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   do connect = "DATABASE=dev_staging DSN=ClouderaImpala64", 
"DBMAX_TEXT=32767 DATABASE=dev_raw DSN=ClouderaImpala64";
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   i + 1;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   if i = 1 then prefix = 'stg';
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   else prefix = 'tgt';
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   schema_length = 6;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   schema_index = index(connect, 'SCHEMA');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   if schema_index = 0 then do;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   schema_index = index(connect, 'DATABASE');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   schema_length = 8;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   end;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   schema = dequote(scan(substr(connect, schema_index + schema_length + 
1), 1, ' '));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   auth_index = index(connect, 'AUTHDOMAIN');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   if auth_index then auth = dequote(scan(substr(connect, auth_index + 10 
+ 1), 1, ' '));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   else auth = ' ';
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call symput(prefix || '_schema', cats('`', schema, '`'));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call symput(prefix || '_auth', strip(auth));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   end;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   data _null_;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call missing(tblcustomerstd, app_tblcustomerstd);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call symput('source_table', lowcase(vname(tblcustomerstd)));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call symput('_target_name', lowcase(vname(app_tblcustomerstd)));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   data _null_;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   array col $ 1 flngdockey;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   length key_cols by_cols $ 32767;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call missing(key_cols, by_cols);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   do over col;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   key_cols = catx(', ', key_cols, lowcase(vname(col)));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   by_cols = catx(' ', by_cols, lowcase(vname(col)));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   end;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call symput('key_order', strip(key_cols));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call symput('by_order', strip(by_cols));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   run;

NOTE: DATA statement used (Total process time):
11                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: DATABASE= and SCHEMA= now represent the same option. The value of the SCHEMA option will be used.
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   connect to ORACLE(DBMAX_TEXT=32767 DEFER=YES encoding="utf-8" 
READBUFF=20000 dbclient_max_bytes=2 PATH="irddev20.vsp.sas.com" AUTHDOMAIN="lcf_dev");
NOTE:  Credential could not be obtained from Viya credentials service.
NOTE:  Credential obtained from SAS metadata server.
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   select object_run_key format=best. into :object_run_key 
trimmed from connection to ORACLE (select lcf.seq_object_run_key.nextval as object_run_key from dual);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   disconnect from ORACLE;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.38 seconds
      cpu time            0.17 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   data _object_run(compress=no);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   if 0 then set lcf.OBJECT_RUN;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   object_run_key = 9108;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   start_time = "30OCT2019:15:54:48"dt;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   object_prg_name = "app_tblcustomerstd P2H2";
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   status = 'Job incomplete';
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   status_message = 'Job incomplete';
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   records_read = 0;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   records_written = 0;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   log_position = getoption('log');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   if not missing(log_position) then object_log_name = 
substr(log_position, index(log_position, 'Logs/') + 5);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   load_pattern_name = "Change Extract";
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   output;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   stop;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   drop log_position;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   run;

NOTE: The data set WORK._OBJECT_RUN has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.35 seconds
      cpu time            0.16 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   proc append base=lcf.OBJECT_RUN data=_object_run;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   run;

NOTE: Appending WORK._OBJECT_RUN to LCF.OBJECT_RUN.
NOTE: There were 1 observations read from the data set WORK._OBJECT_RUN.
NOTE: 1 observations added.
NOTE: The data set LCF.OBJECT_RUN has . observations and 35 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.70 seconds
      cpu time            0.32 seconds
      

12                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   proc delete data=_object_run;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   run;
NOTE: Deleting WORK._OBJECT_RUN (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   data _null_;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call missing(app_tblcustomerstd);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call symputx('meta_target_name', 
strip(lowcase(vname(app_tblcustomerstd))), 'g');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call missing(fdtmwhen);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call symput('effective_column', lowcase(vname(fdtmwhen)));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   data _null_;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   retain table "app_tblcustomerstd";
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   length table_suffix $ 40 suffix $ 5;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   do suffix = '', '_chgt', '_chgd', '_new', '_old', '_dt', '_unwd', 
'_nr';
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   table_suffix = cats(table, suffix);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   table_length = length(table);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   suffix_length = length(suffix);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   if suffix = '_nr' and length(table_suffix) > 32 then do;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   status_msg = catx(' ', 'Table name length too long:', table_suffix);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   putlog status_msg;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call symput('status_msg', strip(status_msg));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call execute('%rcset(8);');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   stop;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   end;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call symputx('hadoop_table' || suffix, cats('`', table_suffix, '`'), 
'g');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   call symputx('sas_table' || suffix, table_suffix, 'g');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   end;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   data _app_tblcustomerstd(compress=no);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   stop;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):   run;

NOTE: The data set WORK._APP_TBLCUSTOMERSTD has 0 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
13                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

      cpu time            0.01 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP):   select object_key, coalesce(days_to_backfill, 
0) as days_to_backfill into :object_key trimmed, :backfill trimmed from lcf.OBJECT where lowcase(sas_lib_ref) = "strapp" and 
lowcase(target_object_name) = "app_tblcustomerstd";
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP):   connect to SASIOIMP(DBMAX_TEXT=32767 
DATABASE=dev_raw DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP):   select row_count format=best20., 
int(ifn(max_timestamp ne '1jan1800:0:0'dt, max_timestamp - 10, max_timestamp)) format=is8601dt26.3 into :_nobs trimmed, 
:max_timestamp trimmed from connection to SASIOIMP (select count(*) as `row_count`, coalesce( days_add(max(`fdtmwhen`), -5) , 
'1800-01-01T00:00:00') as `max_timestamp` from `dev_raw`.`app_tblcustomerstd`);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS.GET_OBJECT_AND_TIMESTAMP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.52 seconds
      cpu time            0.12 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.PARSE_COLUMNS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   proc datasets lib=work nolist nowarn mt=(data view);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   delete _source_v _source_v_dedup _source_v2 _source_v3 existing_keys 
_source_date_selection;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   update lcf.OBJECT_RUN set records_read = 0, object_key = 22, object_name = 
"app_tblcustomerstd", prev_high_water_mark_value = inputn("2019-10-24T20:54:41.000", 'is8601dt23.0'), task1 = "Read Source", 
task1_start_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.82 seconds
      cpu time            0.61 seconds
      

14                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   create view _source_v as select flngdockey length=8 format=best16. , fdtmdob 
length=8 format=datetime22.3 , fdtmdod length=8 format=datetime22.3 , fstrwho length=20 format=$char20. , fdtmwhen length=8 
format=datetime22.3 from strapp.tblCustomerSTD where ( FDTMWHEN between "24OCT2019:20:54:41.000"dt and "30OCT2019:15:54:52.209"dt) 
order by flngdockey, fdtmwhen ;
NOTE: SQL view WORK._SOURCE_V has been defined.
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   data _null_;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   array cols $ 1 flngdockey fdtmdob fdtmdod fstrwho fdtmwhen;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   attrib sas_cols hadoop_cols length=$ 32767;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   do over cols;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   sas_cols = catx(', ', sas_cols, strip(lowcase(vname(cols))));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   hadoop_cols = catx(', ', hadoop_cols, cats("`", lowcase(vname(cols)), "`"));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   end;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   call symputx('sas_cols', strip(sas_cols), 'g');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   call symputx('hadoop_cols', strip(hadoop_cols), 'g');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   call symputx('hadoop_effective_column', cats('`', lowcase(vname(fdtmwhen)), '`'), 
'g');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   select name into :date_vars separated by ' ' from dictionary.columns where libname = 
'WORK' and memname = '_SOURCE_V' and format like 'DATE%' and format not like 'DATETIME%';
NOTE: No rows were selected.
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           1.46 seconds
      cpu time            0.31 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   data _source_v2 / view=_source_v2;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   retain flngdockey fdtmdob fdtmdod fstrwho fdtmwhen ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   set _source_v;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   run;

NOTE: DATA STEP view saved on file WORK._SOURCE_V2.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           4.62 seconds
      cpu time            0.33 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   proc sql;
15                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   update lcf.OBJECT_RUN set records_read = 0, object_key = 22, task1 = "Read 
Source", task1_end_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.67 seconds
      cpu time            0.49 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   update lcf.OBJECT_RUN set records_read = 0, object_key = 22, task2 = 
"Validation", task2_start_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.67 seconds
      cpu time            0.47 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   data _null_;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   array cols $ 1 flngdockey;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   length key_cols $ 32767;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   do over cols;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   key_cols = catx(', ', key_cols, lowcase(vname(cols)));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   end;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   call symput('key_cols', strip(key_cols));
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.SELECT_COLS):   option nomprint nonotes
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.SELECT_COLS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.VALIDATE):   option compress=no missing=' ' nomprint nonotes
There are no rows in work.mismatched_error.
There are no rows in work.mismatched_warning.
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.VALIDATE):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   update lcf.OBJECT_RUN set records_read = 0, object_key = 22, task2 = 
"Validation", task2_end_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

16                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.68 seconds
      cpu time            0.48 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   update lcf.OBJECT_RUN set records_read = 0, object_key = 22, task3 = "Table 
Load", task3_start_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.68 seconds
      cpu time            0.49 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   select name, cats(name, '_x'), catx(' = ', cats(name, '_x'), name) into 
:datetime_names separated by ' ', :datetime_names_char separated by ' ', :datetime_rename separated by ' ' from dictionary.columns 
where libname = 'WORK' and memname = '_SOURCE_V2' and format like 'DATETIME%';
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   data _source_v3(label="Datetimes converted to ISO8601 timestamps") / view=_source_v3;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   set _source_v2;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   array from_dt fdtmdob fdtmdod fdtmwhen;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   array to_dt $ 26 fdtmdob_x fdtmdod_x fdtmwhen_x;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   do over from_dt;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   to_dt[_i_] = put(from_dt, is8601dt26.3);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   end;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   drop fdtmdob fdtmdod fdtmwhen;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   rename fdtmdob_x = fdtmdob fdtmdod_x = fdtmdod fdtmwhen_x = fdtmwhen;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   run;

NOTE: DATA STEP view saved on file WORK._SOURCE_V3.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View WORK._SOURCE_V2.VIEW used (Total process time):
      real time           1.47 seconds
      cpu time            0.33 seconds
      
NOTE: DATA statement used (Total process time):
      real time           1.47 seconds
      cpu time            0.33 seconds
      

17                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP):   connect to SASIOIMP(DATABASE=dev_staging DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP):   execute (drop table if exists `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP):   execute (drop table if exists `dev_staging`.`app_tblcustomerstd_dt`) by 
SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP):   execute (drop table if exists `dev_staging`.`app_tblcustomerstd_nr`) by 
SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP):   execute (drop table if exists `dev_staging`.`app_tblcustomerstd_chgt`) by 
SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP):   execute (drop table if exists `dev_staging`.`app_tblcustomerstd_chgd`) by 
SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP):   execute (drop table if exists `dev_raw`.`app_tblcustomerstd_new`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP):   execute (drop table if exists `dev_raw`.`app_tblcustomerstd_old`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.TIDYUP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.33 seconds
      cpu time            0.19 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   select ifc(format not like 'DATETIME%', cats('`', name, '`'), cat('cast(null as 
varchar(26)) as `', strip(name), '`')) into :create_string separated by ', ' from dictionary.columns where libname = "IMPRAW" and 
upcase(memname) = "APP_TBLCUSTOMERSTD" and lowcase(name) notin('record_effective_timestamp', 'record_expiry_timestamp', 
'record_active_flag', 'record_deleted_flag', 'insert_object_run_key', 'update_object_run_key') ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.10 seconds
      cpu time            0.00 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   connect to SASIOIMP(DATABASE=dev_staging DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute (create table `dev_staging`.`app_tblcustomerstd` with serdeproperties 
('field.delim'='\u0006', 'line.delim'='\u0007', 'serialization.format'='\u0006','serialization.escape.crlf'='true') stored as 
textfile as select `flngdockey`, cast(null as varchar(26)) as `fdtmdob`, cast(null as varchar(26)) as `fdtmdod`, `fstrwho`, 
cast(null as varchar(26)) as `fdtmwhen` from `dev_raw`.`app_tblcustomerstd` where false) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute (invalidate metadata `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute (refresh `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   insert into hivestg.app_tblcustomerstd(bulkload=yes) select flngdockey, fdtmdob, 
fdtmdod, fstrwho, fdtmwhen from _source_v3;
NOTE: There were 12078 observations read from the data set WORK._SOURCE_V.
NOTE: View WORK._SOURCE_V3.VIEW used (Total process time):
18                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

      real time           4.75 seconds
      cpu time            0.38 seconds
      
NOTE: There were 12078 observations read from the data set WORK._SOURCE_V2.
NOTE: 12078 rows were inserted into HIVESTG.APP_TBLCUSTOMERSTD.

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           13.07 seconds
      cpu time            0.65 seconds
      


INFO: 12,078 observations inserted
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.COUNT):   run;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.COUNT):   quit;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.COUNT):   option nomprint nonotes
There are no observations in impstg.app_tblcustomerstd (dev_staging.app_tblcustomerstd) where `flngdockey` is null or `fdtmwhen` is 
null.
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   proc sql dquote=ansi noprint;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   connect to SASIOIMP(DATABASE=dev_staging DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute (invalidate metadata `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute (refresh `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   select count(*) into :date_columns_count trimmed from dictionary.columns where 
libname = 'WORK' and memname = '_SOURCE_V2' and ( format like 'DATETIME%' or format like 'IS8601DT%');
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   select case when format like 'DATETIME%' or format like 'IS8601DT%' then 
cat('cast(`', strip(lowcase(name)), '` as timestamp) as `', strip(name), '`') else cats('`', name, '`') end as select_clause into 
:select_clause separated by ', ' from dictionary.columns where libname = 'WORK' and memname = '_SOURCE_V2';
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute (create table `dev_staging`.`app_tblcustomerstd_dt` stored as parquet as 
select `flngdockey`, cast(`fdtmdob` as timestamp) as `fdtmdob`, cast(`fdtmdod` as timestamp) as `fdtmdod`, `fstrwho`, 
cast(`fdtmwhen` as timestamp) as `fdtmwhen` from `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute (refresh `dev_staging`.`app_tblcustomerstd_dt`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute (drop table `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute (alter table `dev_staging`.`app_tblcustomerstd_dt` rename to 
`dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute (invalidate metadata `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute (compute stats `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           4.33 seconds
      cpu time            0.19 seconds
      

19                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   connect to SASIOIMP(DATABASE=dev_staging DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   execute(create table `dev_staging`.`app_tblcustomerstd_nr` stored as parquet as 
select _left.`flngdockey`, _left.`fdtmdob`, _left.`fdtmdod`, _left.`fstrwho`, _left.`fdtmwhen` from 
`dev_staging`.`app_tblcustomerstd` as _left left join `dev_raw`.`app_tblcustomerstd` as _right on _left.`flngdockey` = 
_right.`flngdockey` and _left.`fdtmwhen` = _right.`fdtmwhen` where _right.`flngdockey` is null) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           20.31 seconds
      cpu time            0.15 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.COUNT):   run;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.COUNT):   quit;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.COUNT):   option nomprint nonotes
There are 9,720 observations in impstg.app_tblcustomerstd_nr (dev_staging.app_tblcustomerstd_nr).
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   update lcf.OBJECT_RUN set records_read = 9720, object_key = 22, task3 = 
"Table Load", task3_end_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.73 seconds
      cpu time            0.47 seconds
      

MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT.PATTERN_COMMON_SETUP):  ;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.LOGGING):   update lcf.OBJECT_RUN set records_read = 9720, object_key = 22, task4 = "Capture Changes", 
task4_start_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.72 seconds
      cpu time            0.47 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT.SELECT_COLS):   option nomprint nonotes
MPRINT(CHANGE_EXTRACT.SELECT_COLS):  ;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT):   proc sql noprint;
MPRINT(CHANGE_EXTRACT):   connect to SASIOIMP(DBMAX_TEXT=32767 DATABASE=dev_raw DSN=ClouderaImpala64);
20                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

MPRINT(CHANGE_EXTRACT):   execute (invalidate metadata `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT):   execute (refresh `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT):   execute (create table `dev_staging`.`app_tblcustomerstd_chgt` stored as parquet as with new_min as 
(select `flngdockey`, min(`fdtmwhen`) as `effective_ts` from `dev_staging`.`app_tblcustomerstd_nr` group by `flngdockey`), 
current_max as (select `flngdockey`, max(record_effective_timestamp) as `effective_ts` from `dev_raw`.`app_tblcustomerstd` group by 
`flngdockey`), new_ranked as (select `flngdockey`, `fdtmwhen` as `effective_ts`, rank() over(partition by `flngdockey` order by 
`fdtmwhen`) as `rank` from `dev_staging`.`app_tblcustomerstd_nr`), previous_active as (select distinct `flngdockey`, 
`effective_ts`, `rank` - 1 as `rank` from new_ranked) select _left.`flngdockey`, _left.`effective_ts`, _left.`effective_ts` as 
`record_effective_timestamp`, milliseconds_add(_right.`effective_ts`, -1) as `record_expiry_timestamp`, cast('U' as varchar(1)) as 
`operation`, cast(9108 as int) as `object_run_key` from current_max as _left left join new_min as _right on _left.`flngdockey` = 
_right.`flngdockey` where _right.`flngdockey` is not null union all select _left.`flngdockey`, _left.`effective_ts`, 
_left.`effective_ts` as `record_effective_timestamp`, coalesce(milliseconds_add(_right.`effective_ts`, -1), 
cast('9000-12-31T00:00:00' as timestamp)) as `record_expiry_timestamp`, cast('I' as varchar(1)) as `operation`, cast(9108 as int) 
as `object_run_key` from new_ranked as _left left join previous_active as _right on _left.`flngdockey` = _right.`flngdockey` and 
_left.`rank` = _right.`rank`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT):   select count into :_nobs from connection to SASIOIMP (select count(*) as `count` from 
`dev_staging`.`app_tblcustomerstd_chgt`);
MPRINT(CHANGE_EXTRACT.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           2.24 seconds
      cpu time            0.11 seconds
      


INFO: There are 19,440 rows in app_tblcustomerstd_chgt
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT):   proc sql;
MPRINT(CHANGE_EXTRACT):   connect to SASIOIMP(DBMAX_TEXT=32767 DATABASE=dev_raw DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT):   execute (create table `dev_staging`.`app_tblcustomerstd_chgd` stored as parquet as select 
_left.`flngdockey`, _left.`fdtmdob`, _left.`fdtmdod`, _left.`fstrwho`, _left.`fdtmwhen`, _right.record_effective_timestamp, 
_right.record_expiry_timestamp, _right.operation, _right.object_run_key from `dev_staging`.`app_tblcustomerstd_nr` as _left inner 
join `dev_staging`.`app_tblcustomerstd_chgt` as _right on _left.`flngdockey` = _right.`flngdockey` and _left.`fdtmwhen` = 
_right.`effective_ts` and _right.operation = 'I' union all select _left.`flngdockey`, _left.`fdtmdob`, _left.`fdtmdod`, 
_left.`fstrwho`, _left.`fdtmwhen`, _right.record_effective_timestamp, _right.record_expiry_timestamp, _right.operation, 
_right.object_run_key from `dev_raw`.`app_tblcustomerstd` as _left inner join `dev_staging`.`app_tblcustomerstd_chgt` as _right on 
_left.`flngdockey` = _right.`flngdockey` and _left.record_effective_timestamp = _right.record_effective_timestamp and 
_right.operation = 'U') by SASIOIMP;
MPRINT(CHANGE_EXTRACT.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           2.26 seconds
      cpu time            0.07 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.LOGGING):   update lcf.OBJECT_RUN set records_read = 9720, object_key = 22, task4 = "Capture Changes", 
task4_end_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.
21                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM


MPRINT(CHANGE_EXTRACT.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.76 seconds
      cpu time            0.48 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.LOGGING):   update lcf.OBJECT_RUN set records_read = 9720, object_key = 22, task5 = "Apply Changes", 
task5_start_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.69 seconds
      cpu time            0.47 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT):   proc sql;
MPRINT(CHANGE_EXTRACT):   connect to SASIOIMP(DBMAX_TEXT=32767 DATABASE=dev_raw DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT):   execute (create table `dev_raw`.`app_tblcustomerstd_new` stored as parquet as select _left.`flngdockey`, 
_left.`fdtmdob`, _left.`fdtmdod`, _left.`fstrwho`, _left.`fdtmwhen`, _left.record_effective_timestamp, 
_left.record_expiry_timestamp, _left.record_active_flag, _left.record_deleted_flag, _left.insert_object_run_key, 
_left.update_object_run_key from `dev_raw`.`app_tblcustomerstd` as _left left join `dev_staging`.`app_tblcustomerstd_chgd` as 
_right on _left.`flngdockey` = _right.`flngdockey` and _left.record_effective_timestamp = _right.record_effective_timestamp and 
_right.object_run_key = 9108 where _right.`flngdockey` is null union all select _left.`flngdockey`, _left.`fdtmdob`, 
_left.`fdtmdod`, _left.`fstrwho`, _left.`fdtmwhen`, record_effective_timestamp, record_expiry_timestamp, cast(case when 
record_expiry_timestamp >= cast("9000-12-31T00:00:00" as timestamp) then 'Y' else 'N' end as varchar(1)) as record_active_flag, 
cast('N' as varchar(1)) as record_deleted_flag, object_run_key as insert_object_run_key, object_run_key as update_object_run_key 
from `dev_staging`.`app_tblcustomerstd_chgd` as _left where object_run_key = 9108 and operation = 'I' union all select 
_left.`flngdockey`, _left.`fdtmdob`, _left.`fdtmdod`, _left.`fstrwho`, _left.`fdtmwhen`, _left.record_effective_timestamp, 
_left.record_expiry_timestamp, cast('N' as varchar(1)) as record_active_flag, cast('N' as varchar(1)) as record_deleted_flag, 
_right.insert_object_run_key, _left.object_run_key as update_object_run_key from `dev_staging`.`app_tblcustomerstd_chgd` as _left 
inner join `dev_raw`.`app_tblcustomerstd` as _right on _left.`flngdockey` = _right.`flngdockey` and 
_left.record_effective_timestamp = _right.record_effective_timestamp and _left.object_run_key = 9108 and _left.operation = 'U') by 
SASIOIMP;
MPRINT(CHANGE_EXTRACT.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           33.35 seconds
      cpu time            0.19 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.LOGGING):   update lcf.OBJECT_RUN set records_read = 9720, object_key = 22, task5 = "Apply Changes", 
task5_end_time = datetime() where object_run_key = 9108;
22                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.68 seconds
      cpu time            0.48 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.LOGGING):   update lcf.OBJECT_RUN set records_read = 9720, object_key = 22, task6 = "Reconciliation", 
task6_start_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.68 seconds
      cpu time            0.47 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   proc datasets lib=work nolist nowarn mt=(data view);
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   delete count_source_v count_target_v;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(CHANGE_EXTRACT.RECONCILIATION.SELECT_COLS):   option nomprint nonotes
MPRINT(CHANGE_EXTRACT.RECONCILIATION.SELECT_COLS):  ;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):  ;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   proc sql;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   connect to SASIOIMP(DBMAX_TEXT=32767 DATABASE=dev_raw DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   create view count_source_v as select 'Source' as type length=6, measure length=6, count as 
source_count format=comma14. from connection to SASIOIMP (select cast('insert' as varchar(6)) as measure, count(*) as count from 
`dev_staging`.`app_tblcustomerstd_nr` union all select cast('update' as varchar(6)) as measure, count(distinct _left.`flngdockey`) 
as count from `dev_staging`.`app_tblcustomerstd_nr` as _left inner join (select distinct `flngdockey` from 
`dev_raw`.`app_tblcustomerstd`) as _right on _left.`flngdockey` = _right.`flngdockey`);
NOTE: SQL view WORK.COUNT_SOURCE_V has been defined.
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   create view count_target_v as select 'Target' as type length=6, measure length=6, count as 
target_count format=comma14. from connection to sasioimp (select cast('insert' as varchar(6)) as measure, count(*) as count from 
`dev_raw`.`app_tblcustomerstd_new` as _left inner join (select distinct object_run_key from 
`dev_staging`.`app_tblcustomerstd_chgt`) as _right on _left.insert_object_run_key = _right.object_run_key union all select 
cast('update' as varchar) as measure, count(*) as count from `dev_raw`.`app_tblcustomerstd_new` as _left inner join (select 
distinct object_run_key from `dev_staging`.`app_tblcustomerstd_chgt`) as _right on _left.update_object_run_key = 
_right.object_run_key where update_object_run_key != insert_object_run_key);
NOTE: SQL view WORK.COUNT_TARGET_V has been defined.
MPRINT(CHANGE_EXTRACT.RECONCILIATION.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):  ;
23                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

MPRINT(CHANGE_EXTRACT.RECONCILIATION):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

MPRINT(CHANGE_EXTRACT.RECONCILIATION):   data _null_;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   merge count_source_v(in=in_source) count_target_v(in=in_target);
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   by measure;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   format source_count target_count comma14.;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   retain m1 -1 error 0;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   attrib status_msg length=$ 32767;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   if source_count ne target_count then do;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   status_msg = cat('ERROR: Mismatch on ', strip(measure), ': Source count ', 
strip(putn(source_count, 'comma14.')), '; Target count: ', strip(putn(target_count, 'comma14.')), '.');
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   putlog status_msg;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   call symputx('status_msg', strip(status_msg), 'g');
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   call execute('%rcset(8);');
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   stop;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   end;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   else putlog 'Matched on ' measure +m1 ': rows ' source_count;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   run;

Matched on insert: rows 9,720
Matched on update: rows 9,720
NOTE: There were 2 observations read from the data set WORK.COUNT_SOURCE_V.
NOTE: There were 2 observations read from the data set WORK.COUNT_TARGET_V.
NOTE: DATA statement used (Total process time):
      real time           4.54 seconds
      cpu time            0.07 seconds
      

MPRINT(CHANGE_EXTRACT.RECONCILIATION):   proc datasets lib=work nolist nowarn mt=(data view);
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   delete count_source_v count_target_v;
MPRINT(CHANGE_EXTRACT.RECONCILIATION):   quit;

NOTE: Deleting WORK.COUNT_SOURCE_V (memtype=VIEW).
NOTE: Deleting WORK.COUNT_TARGET_V (memtype=VIEW).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT):   proc sql;
MPRINT(CHANGE_EXTRACT):   connect to SASIOIMP(DBMAX_TEXT=32767 DATABASE=dev_raw DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT):   select count into :_nobs trimmed from connection to SASIOIMP (select count(*) as `count` from 
`dev_raw`.`app_tblcustomerstd_new` where `record_effective_timestamp` > `record_expiry_timestamp`);
MPRINT(CHANGE_EXTRACT.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.66 seconds
      cpu time            0.03 seconds
      

24                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

MPRINT(CHANGE_EXTRACT.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.LOGGING):   update lcf.OBJECT_RUN set records_read = 9720, object_key = 22, task6 = "Reconciliation", 
task6_end_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.67 seconds
      cpu time            0.48 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.LOGGING):   update lcf.OBJECT_RUN set records_read = 9720, object_key = 22, task7 = "Commit", 
task7_start_time = datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.67 seconds
      cpu time            0.47 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):   connect to SASIOIMP(DBMAX_TEXT=32767 DATABASE=dev_raw DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):   execute (refresh `dev_raw`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):   execute(alter table `dev_raw`.`app_tblcustomerstd` rename to 
`dev_raw`.`app_tblcustomerstd_old`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):   execute(alter table `dev_raw`.`app_tblcustomerstd_new` rename to 
`dev_raw`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):   execute(drop table `dev_raw`.`app_tblcustomerstd_old`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):   execute(refresh `dev_raw`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):   execute(compute stats `dev_raw`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):  ;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT.COMMIT_CHANGES):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           29.82 seconds
25                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

      cpu time            0.16 seconds
      

MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.LOGGING):   proc sql;
MPRINT(CHANGE_EXTRACT.LOGGING):   update lcf.OBJECT_RUN set records_read = 9720, object_key = 22, task7 = "Commit", task7_end_time 
= datetime() where object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.68 seconds
      cpu time            0.48 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   options nosyntaxcheck mprint notes;
MPRINT(CHANGE_EXTRACT.LOGGING):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.LOGGING):   connect to SASIOIMP(DBMAX_TEXT=32767 DATABASE=dev_raw DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT.LOGGING):   select coalesce(max_timestamp, '1jan1800:0:0'dt) as max_timestamp format=datetime26.3 into 
:max_timestamp trimmed from connection to SASIOIMP (select max(fdtmwhen) as max_timestamp from `dev_raw`.`app_tblcustomerstd`);
MPRINT(CHANGE_EXTRACT.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.45 seconds
      cpu time            0.04 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING.COUNT):   run;
MPRINT(CHANGE_EXTRACT.LOGGING.COUNT):   quit;
MPRINT(CHANGE_EXTRACT.LOGGING.COUNT):   option nomprint nonotes
There are 19,440 observations in impraw.app_tblcustomerstd (dev_raw.app_tblcustomerstd) where update_object_run_key = 9108.
MPRINT(CHANGE_EXTRACT.LOGGING):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.LOGGING):   update lcf.OBJECT_RUN set end_time = datetime(), records_written = 19440, high_water_mark_value = 
"30OCT2019:15:52:53.983"dt, status = "Job Successful", status_message = "19,440 rows updated on app_tblcustomerstd" where 
object_run_key = 9108;
NOTE: 1 row was updated in LCF.OBJECT_RUN.

MPRINT(CHANGE_EXTRACT.LOGGING.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):  ;
MPRINT(CHANGE_EXTRACT.LOGGING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.95 seconds
      cpu time            0.76 seconds
      

MPRINT(CHANGE_EXTRACT.LOGGING):   option NOSYNTAXCHECK MPRINT NOTES;
MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT.TIDYUP):   proc sql noprint;
MPRINT(CHANGE_EXTRACT.TIDYUP):   connect to SASIOIMP(DATABASE=dev_staging DSN=ClouderaImpala64);
MPRINT(CHANGE_EXTRACT.TIDYUP):   execute (drop table if exists `dev_staging`.`app_tblcustomerstd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.TIDYUP.CHECK_STATUS):  ;
26                                                         The SAS System                     Wednesday, 30 October 2019 03:54:00 PM

MPRINT(CHANGE_EXTRACT.TIDYUP):   execute (drop table if exists `dev_staging`.`app_tblcustomerstd_dt`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.TIDYUP):   execute (drop table if exists `dev_staging`.`app_tblcustomerstd_nr`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.TIDYUP):   execute (drop table if exists `dev_staging`.`app_tblcustomerstd_chgt`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.TIDYUP):   execute (drop table if exists `dev_staging`.`app_tblcustomerstd_chgd`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.TIDYUP):   execute (drop table if exists `dev_raw`.`app_tblcustomerstd_new`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.TIDYUP):   execute (drop table if exists `dev_raw`.`app_tblcustomerstd_old`) by SASIOIMP;
MPRINT(CHANGE_EXTRACT.TIDYUP.CHECK_STATUS):  ;
MPRINT(CHANGE_EXTRACT.TIDYUP):   disconnect from SASIOIMP;
MPRINT(CHANGE_EXTRACT.TIDYUP):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.65 seconds
      cpu time            0.19 seconds
      

MPRINT(CHANGE_EXTRACT):  ;
MPRINT(CHANGE_EXTRACT):  ;
510        
511        %rcSet(&syserr);
512        %rcSet(&sysrc);
513        %rcSet(&sqlrc);
514        
515        
516        
517        /** Step end Change Extract **/
518        
519        %let etls_endTime = %sysfunc(datetime(),datetime.);
520        
521        
522        
523        
524        %LET _CLIENTTASKLABEL=;
525        %LET _CLIENTPROCESSFLOWNAME=;
526        %LET _CLIENTPROJECTPATH=;
527        %LET _CLIENTPROJECTPATHHOST=;
528        %LET _CLIENTPROJECTNAME=;
529        %LET _SASPROGRAMFILE=;
530        %LET _SASPROGRAMFILEHOST=;
531        
532        ;*';*";*/;quit;run;
533        ODS _ALL_ CLOSE;
534        
535        
536        QUIT; RUN;
537        
