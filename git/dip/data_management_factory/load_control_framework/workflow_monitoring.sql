
CREATE TABLE "LCF"."STG_LSF_WORKFLOW_XML" 
(	"FILENAME" VARCHAR2(255), 
"UPLOADED_TIMESTAMP" TIMESTAMP (6), 
"XMLDATA" "XMLTYPE"
) ;


CREATE TABLE "LCF"."STG_LSF_EVENT_LOG" 
(	"FIELD1" VARCHAR2(1020), 
"FIELD2" VARCHAR2(1020), 
"FIELD3" VARCHAR2(1020), 
"FIELD4" VARCHAR2(1020), 
"FIELD5" VARCHAR2(1020), 
"FIELD6" VARCHAR2(1020), 
"FIELD7" VARCHAR2(1020), 
"FIELD8" VARCHAR2(1020), 
"FIELD9" VARCHAR2(1020), 
"FIELD10" VARCHAR2(1020), 
"FIELD11" VARCHAR2(1020), 
"FIELD12" VARCHAR2(1020), 
"FIELD13" VARCHAR2(1020), 
"FIELD14" VARCHAR2(1020), 
"FIELD15" VARCHAR2(1020), 
"FIELD16" VARCHAR2(1020), 
"FIELD17" VARCHAR2(1020), 
"FIELD18" VARCHAR2(1020), 
"FIELD19" VARCHAR2(1020), 
"FIELD20" VARCHAR2(1020), 
"FIELD21" VARCHAR2(1020), 
"FIELD22" VARCHAR2(1020), 
"FIELD23" VARCHAR2(1020), 
"FIELD24" VARCHAR2(1020), 
"FIELD25" VARCHAR2(1020), 
"FIELD26" VARCHAR2(1020), 
"FIELD27" VARCHAR2(1020), 
"FIELD28" VARCHAR2(1020), 
"FIELD29" VARCHAR2(1020), 
"FIELD30" VARCHAR2(1020), 
"FIELD31" VARCHAR2(1020), 
"FIELD32" VARCHAR2(1020), 
"FIELD33" VARCHAR2(1020), 
"FIELD34" VARCHAR2(1020), 
"FIELD35" VARCHAR2(1020), 
"FIELD36" VARCHAR2(1020), 
"FIELD37" VARCHAR2(1020), 
"FIELD38" VARCHAR2(1020), 
"FIELD39" VARCHAR2(1020), 
"FIELD40" VARCHAR2(1020), 
"FIELD41" VARCHAR2(1020), 
"FIELD42" VARCHAR2(1020), 
"FIELD43" VARCHAR2(1020), 
"FIELD44" VARCHAR2(1020), 
"FIELD45" VARCHAR2(1020), 
"FIELD46" VARCHAR2(1020), 
"FIELD47" VARCHAR2(1020), 
"FIELD48" VARCHAR2(1020), 
"FIELD49" VARCHAR2(1020), 
"FIELD50" VARCHAR2(1020), 
"FIELD51" VARCHAR2(1020), 
"FIELD52" VARCHAR2(1020), 
"FIELD53" VARCHAR2(1020), 
"FIELD54" VARCHAR2(1020), 
"FIELD55" VARCHAR2(1020), 
"FIELD56" VARCHAR2(1020), 
"FIELD57" VARCHAR2(1020), 
"FIELD58" VARCHAR2(1020), 
"FIELD59" VARCHAR2(1020), 
"FIELD60" VARCHAR2(1020), 
"FIELD61" VARCHAR2(1020), 
"FIELD62" VARCHAR2(1020), 
"FIELD63" VARCHAR2(1020), 
"FIELD64" VARCHAR2(1020), 
"FIELD65" VARCHAR2(1020), 
"FIELD66" VARCHAR2(1020), 
"FIELD67" VARCHAR2(1020), 
"FIELD68" VARCHAR2(1020), 
"FIELD69" VARCHAR2(1020), 
"FIELD70" VARCHAR2(1020), 
"FIELD71" VARCHAR2(1020), 
"FIELD72" VARCHAR2(1020), 
"FIELD73" VARCHAR2(1020), 
"FIELD74" VARCHAR2(1020), 
"FIELD75" VARCHAR2(1020), 
"FIELD76" VARCHAR2(1020), 
"FIELD77" VARCHAR2(1020), 
"FIELD78" VARCHAR2(1020), 
"FIELD79" VARCHAR2(1020), 
"FIELD80" VARCHAR2(1020), 
"FIELD81" VARCHAR2(1020), 
"FIELD82" VARCHAR2(1020), 
"FIELD83" VARCHAR2(1020), 
"FIELD84" VARCHAR2(1020), 
"FIELD85" VARCHAR2(1020), 
"FIELD86" VARCHAR2(1020), 
"FIELD87" VARCHAR2(1020), 
"FIELD88" VARCHAR2(1020), 
"FIELD89" VARCHAR2(1020), 
"FIELD90" VARCHAR2(1020), 
"FIELD91" VARCHAR2(1020), 
"FIELD92" VARCHAR2(1020), 
"FIELD93" VARCHAR2(1020)
) ;


CREATE TABLE "LCF"."WORKFLOW_JOB" 
(	"NUMBER_OF_LEVELS" NUMBER(10,0), 
"WORKFLOW_LEVEL_1" VARCHAR2(255), 
"WORKFLOW_LEVEL_2" VARCHAR2(255), 
"WORKFLOW_LEVEL_3" VARCHAR2(255), 
"WORKFLOW_LEVEL_4" VARCHAR2(255), 
"WORKFLOW_LEVEL_5" VARCHAR2(255), 
"JOB_NAME" VARCHAR2(255), 
"RECORD_EFFECTIVE_TIMESTMAP" TIMESTAMP (6), 
"RECORD_EXPIRY_TIMESTAMP" TIMESTAMP (6), 
"RECORD_ACTIVE_FLAG" CHAR(10), 
 CONSTRAINT "WORKFLOW_JOB_PK" PRIMARY KEY ("JOB_NAME", "RECORD_EFFECTIVE_TIMESTMAP") 
);
 


CREATE TABLE "LCF"."WORKFLOW_JOB_RUN" 
(	"NUMBER_OF_LEVELS" NUMBER(10,0), 
"WORKFLOW_LEVEL_1" VARCHAR2(255), 
"WORKFLOW_LEVEL_2" VARCHAR2(255), 
"WORKFLOW_LEVEL_3" VARCHAR2(255), 
"WORKFLOW_LEVEL_4" VARCHAR2(255), 
"WORKFLOW_LEVEL_5" VARCHAR2(255), 
"JOB_NAME" VARCHAR2(255), 
"LSF_WORKFLOW_RUN_ID" NUMBER(10,0), 
"RUN_DATE_TIME" TIMESTAMP (6), 
"LSF_OBJECT_PRG_ID" NUMBER(10,0), 
"OBJECT_NAME" VARCHAR2(255), 
"JOB_STATUS" VARCHAR2(20), 
"JOB_START_TIME" TIMESTAMP (6), 
"JOB_END_TIME" TIMESTAMP (6), 
"ETL_UPDATE_TIME" TIMESTAMP (6), 
"ROWS_PROCESSED" NUMBER(14,0), 
"ELAPSED_SECONDS" NUMBER(10,0), 
"ROWS_PER_SECOND" NUMBER(12,2), 
"WORKFLOW_RUN_JOB_GROUP" VARCHAR2(260), 
 CONSTRAINT "WORKFLOW_JOB_RUN_PK" PRIMARY KEY ("JOB_NAME", "LSF_WORKFLOW_RUN_ID", "LSF_OBJECT_PRG_ID", "OBJECT_NAME") 
);
 
 
CREATE INDEX "LCF"."WORKFLOW_JOB_RUN_RUN_DATE_TIME_IDX" ON "LCF"."WORKFLOW_JOB_RUN" ("RUN_DATE_TIME")  ;

CREATE INDEX "LCF"."WORKFLOW_JOB_RUN_WORKFLOW_RUN_JOB_GROUP_IDX" ON "LCF"."WORKFLOW_JOB_RUN" ("WORKFLOW_RUN_JOB_GROUP") ;


CREATE OR REPLACE VIEW LCF.V_LSF_JOB_RUN
(LSF_OBJECT_PRG_ID,LSF_WORKFLOW_RUN_ID,NUMBER_OF_LEVELS,WORKFLOW_LEVEL_1,WORKFLOW_LEVEL_2,WORKFLOW_LEVEL_3,WORKFLOW_LEVEL_4,WORKFLOW_LEVEL_5,JOB_NAME,SUBMIT_TIME,START_TIME,END_TIME,STATUS)
AS
SELECT 
	CAST(to_number(jheader.JOB_ID) AS NUMBER(10,0)) AS LSF_OBJECT_PRG_ID,
	CAST(to_number(jheader.JOB_GROUP_ID) AS NUMBER(10,0)) AS LSF_WORKFLOW_RUN_ID,
	CAST(jheader.NUMBER_OF_LEVELS AS  NUMBER(10,0)) AS NUMBER_OF_LEVELS,
	cast(jheader.WORKFLOW_lEVEL_1 as varchar(255)) AS WORKFLOW_lEVEL_1,
	cast(jheader.WORKFLOW_lEVEL_2 as varchar(255)) AS WORKFLOW_lEVEL_2,
	cast(jheader.WORKFLOW_lEVEL_3 as varchar(255)) AS WORKFLOW_lEVEL_3,
	cast(jheader.WORKFLOW_lEVEL_4 as varchar(255)) AS WORKFLOW_lEVEL_4,
	cast(jheader.WORKFLOW_lEVEL_5 as varchar(255)) AS WORKFLOW_lEVEL_5,
	cast(jheader.JOB_NAME as varchar(255)) AS JOB_NAME,
	CAST(to_timestamp('1970-01-01','YYYY-MM-DD')+NUMTODSINTERVAL(TO_NUMBER( jheader.EVENT_TIME) +43200,'SECOND') AS timestamp(6)) AS SUBMIT_TIME,
	CAST(to_timestamp('1970-01-01','YYYY-MM-DD')+NUMTODSINTERVAL(TO_NUMBER( COALESCE(jsignal.EVENT_TIME,jstart.EVENT_TIME))+43200,'SECOND') AS timestamp(6)) AS START_TIME,
	CAST(to_timestamp('1970-01-01','YYYY-MM-DD')+NUMTODSINTERVAL(TO_NUMBER( jend.EVENT_TIME)+43200,'SECOND') AS timestamp(6)) AS END_TIME,
	CAST( CASE 
		WHEN jsignal.EVENT_TIME IS NOT NULL THEN 'Killed'
		WHEN jstart.EVENT_TIME IS NULL THEN 'Pending'
		WHEN jend.EVENT_TIME IS NULL THEN 'Running'	
		WHEN jend.RUN_STATUS = 64 THEN 'Done'
		WHEN jend.RUN_STATUS = 32 THEN 'Exit'		
		ELSE 'Unknown'
	END AS varchar(10)) AS STATUS
FROM 
(
	SELECT 
	FIELD3 AS EVENT_TIME
	,FIELD4 AS JOB_ID
	,REGEXP_SUBSTR(FIELD43, '[^:]+', 1,1) AS JOB_GROUP_ID
	,REGEXP_COUNT(FIELD43, ':')-1 AS NUMBER_OF_LEVELS
	,REGEXP_SUBSTR(FIELD43, '[^:]+', 1,3) AS WORKFLOW_lEVEL_1
	,CASE
			WHEN REGEXP_COUNT(FIELD43, ':') != 3 THEN REGEXP_SUBSTR(FIELD43, '[^:]+', 1, 4)
	END AS WORKFLOW_lEVEL_2
	,CASE
			WHEN REGEXP_COUNT(FIELD43, ':') != 4 THEN REGEXP_SUBSTR(FIELD43, '[^:]+', 1, 5)
	END AS WORKFLOW_lEVEL_3
	,CASE
			WHEN REGEXP_COUNT(FIELD43, ':') != 5 THEN REGEXP_SUBSTR(FIELD43, '[^:]+', 1, 6)
	END AS WORKFLOW_lEVEL_4
	,CASE
			WHEN REGEXP_COUNT(FIELD43, ':') != 6 THEN REGEXP_SUBSTR(FIELD43, '[^:]+', 1, 7)
	END AS WORKFLOW_lEVEL_5
		,REGEXP_SUBSTR(FIELD43, '[^:]+', 1, REGEXP_COUNT(FIELD43, ':')+1) AS JOB_NAME
	FROM LCF.STG_LSF_EVENT_LOG 
	WHERE FIELD1 = 'JOB_NEW'
) jheader
LEFT JOIN 
(
	SELECT 
	FIELD3 AS EVENT_TIME
	,FIELD4  AS JOB_ID
	FROM LCF.STG_LSF_EVENT_LOG 
	WHERE FIELD1 = 'JOB_START_ACCEPT'
) jstart ON jheader.JOB_ID = jstart.JOB_ID
LEFT JOIN 
(
	SELECT 
	 FIELD3 AS EVENT_TIME
	,FIELD4 AS JOB_ID
	,to_number(FIELD5) AS RUN_STATUS
	FROM LCF.STG_LSF_EVENT_LOG
	WHERE FIELD1 = 'JOB_STATUS'
	AND FIELD5 IN ('64','32')
) jend ON jheader.JOB_ID = jend.JOB_ID
LEFT JOIN 
(
	SELECT 
	 FIELD3 AS EVENT_TIME
	,FIELD4 AS JOB_ID
	,to_number(FIELD5) AS RUN_STATUS
	FROM LCF.STG_LSF_EVENT_LOG
	WHERE FIELD1 = 'JOB_SIGNAL'
) jsignal ON jheader.JOB_ID = jsignal.JOB_ID
WHERE jheader.JOB_GROUP_ID IS NOT null;

CREATE OR REPLACE VIEW LCF.V_LSF_JOB_RUN_WITH_OBJ_RUN
(LSF_OBJECT_PRG_ID,LSF_WORKFLOW_RUN_ID,NUMBER_OF_LEVELS,WORKFLOW_LEVEL_1,WORKFLOW_LEVEL_2,WORKFLOW_LEVEL_3,WORKFLOW_LEVEL_4,WORKFLOW_LEVEL_5,JOB_NAME,SUBMIT_TIME,START_TIME,END_TIME,OBJECT_NAME,STATUS,OR_STATUS,OR_START_TIME,OR_END_TIME,ROWS_PROCESSED)
AS
WITH dor as
	(
		SELECT OBJECT_NAME ,CATEGORY ,TASK1 AS JOB_NAME,TASK1_START_TIME AS START_TIME,TASK1_END_TIME AS END_TIME ,TASK1_STATUS  STATUS,RECORDS_WRITTEN 
		FROM DIP_OBJECT_RUN 
		WHERE TASK1 IS NOT NULL
		AND TASK1_START_TIME  IS NOT NULL
		union
		SELECT OBJECT_NAME ,CATEGORY,TASK2 ,TASK2_START_TIME ,TASK2_END_TIME ,TASK2_STATUS ,RECORDS_WRITTEN
		FROM DIP_OBJECT_RUN
		WHERE TASK2 IS NOT NULL
		AND TASK2_START_TIME  IS NOT NULL
		union
		SELECT OBJECT_NAME ,CATEGORY,TASK3 ,TASK3_START_TIME ,TASK3_END_TIME ,TASK3_STATUS ,RECORDS_WRITTEN
		FROM DIP_OBJECT_RUN 
		WHERE TASK3 IS NOT NULL
		AND TASK3_START_TIME  IS NOT NULL
		union
		SELECT OBJECT_NAME ,CATEGORY,TASK4 ,TASK4_START_TIME ,TASK4_END_TIME ,TASK4_STATUS ,RECORDS_WRITTEN
		FROM DIP_OBJECT_RUN 
		WHERE TASK4 IS NOT NULL	
		AND TASK4_START_TIME  IS NOT NULL
	),
	ri AS 
	(
		SELECT  OBJECT_PRG_NAME ,
				TARGET_OBJECT_NAME,
		CASE 
			WHEN STATUS LIKE '%Warning%' THEN 'Warning'
			WHEN STATUS LIKE '%Successful%' THEN 'Success'
			WHEN STATUS LIKE '%Errors%' THEN 'Error'
			ELSE 'Unfinished' END AS STATUS,
		START_TIME,
		END_TIME,
		RECORDS_WRITTEN
		FROM OBJECT_RUN 
	)
	SELECT 
			wjr.LSF_OBJECT_PRG_ID,
			wjr.LSF_WORKFLOW_RUN_ID,
			wjr.NUMBER_OF_LEVELS,
			wjr.WORKFLOW_LEVEL_1,
			wjr.WORKFLOW_LEVEL_2,
			wjr.WORKFLOW_LEVEL_3,
			wjr.WORKFLOW_LEVEL_4,
			wjr.WORKFLOW_LEVEL_5,
			wjr.JOB_NAME,
			wjr.SUBMIT_TIME,
			COALESCE( CASE WHEN upper(wjr.JOB_NAME ) LIKE '%_LOOP_%' THEN dor.START_TIME end,wjr.START_TIME) AS START_TIME ,
			COALESCE( CASE WHEN upper(wjr.JOB_NAME ) LIKE '%_LOOP_%' THEN dor.END_TIME end,wjr.END_TIME) AS END_TIME,
			COALESCE(dor.OBJECT_NAME, ri.TARGET_OBJECT_NAME) AS OBJECT_NAME,
			CASE 
				WHEN wjr.STATUS = 'Done' AND COALESCE (ri.status,dor.STATUS) = 'Success' THEN 'Success'
				WHEN wjr.STATUS = 'Running' THEN 'Running'
				WHEN wjr.STATUS IN ('Exit') THEN 'Error'
				WHEN COALESCE (ri.status,dor.STATUS) IS NOT NULL AND COALESCE (ri.status,dor.STATUS) != 'Unfinished' THEN COALESCE (ri.status,dor.STATUS)
				WHEN wjr.STATUS = 'Done' THEN 'Success'
				ELSE wjr.STATUS 
			END AS STATUS,		
			COALESCE (dor.STATUS,ri.STATUS) AS OR_STATUS,
			COALESCE (dor.START_TIME, ri.START_TIME ) AS OR_START_TIME,
			COALESCE (dor.END_TIME,	ri.END_TIME) AS OR_END_TIME,
			COALESCE (dor.RECORDS_WRITTEN, ri.RECORDS_WRITTEN) AS ROWS_PROCESSED
--			,RANK() over (PARTITION BY wjr.LSF_WORKFLOW_RUN_ID,wjr.JOB_NAME,dor.OBJECT_NAME ORDER BY wjr.LSF_OBJECT_PRG_ID DESC,COALESCE(dor.START_TIME, ri.START_TIME ) DESC) RNK
	FROM LCF.V_LSF_JOB_RUN wjr		
	LEFT JOIN dor
	ON UPPER( wjr.JOB_NAME) = UPPER(REPLACE (dor.JOB_NAME,' ','_')) 
	AND dor.START_TIME >= wjr.START_TIME
	AND nvl(dor.END_TIME,dor.START_TIME ) <= nvl(wjr.END_TIME + NUMTODSINTERVAL(1,'SECOND'),SYSDATE) 
	LEFT JOIN ri
	ON UPPER( wjr.JOB_NAME) = UPPER(REPLACE( ri.OBJECT_PRG_NAME,' ','_'))
	AND ri.START_TIME >= wjr.START_TIME 
	AND nvl(ri.END_TIME,ri.START_TIME) <= nvl(wjr.END_TIME + NUMTODSINTERVAL(1,'SECOND'),sysdate);
	

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "LCF"."V_LSF_WORKFLOW_JOB" ("NUMBER_OF_LEVELS", "WORKFLOW_LEVEL_1", "WORKFLOW_LEVEL_2", "WORKFLOW_LEVEL_3", "WORKFLOW_LEVEL_4", "WORKFLOW_LEVEL_5", "JOB_NAME") AS 
  SELECT 
	CAST(REGEXP_COUNT(lsf.JOB_PATH, ':') AS NUMBER(10,0))  AS NUMBER_OF_LEVELS,
	CAST(REGEXP_SUBSTR(lsf.JOB_PATH, '[^:]+', 1,2) as varchar(255)) AS WORKFLOW_lEVEL_1,
	CAST(CASE 
			WHEN REGEXP_COUNT(lsf.JOB_PATH, ':') > 2 THEN REGEXP_SUBSTR(lsf.JOB_PATH, '[^:]+', 1, 3)
	END as varchar(255)) AS WORKFLOW_lEVEL_2,
	CAST(CASE 
			WHEN REGEXP_COUNT(lsf.JOB_PATH, ':') > 3 THEN REGEXP_SUBSTR(lsf.JOB_PATH, '[^:]+', 1, 4)
	END as varchar(255)) AS WORKFLOW_lEVEL_3,
	CAST(CASE 
			WHEN REGEXP_COUNT(lsf.JOB_PATH, ':') > 4 THEN REGEXP_SUBSTR(lsf.JOB_PATH, '[^:]+', 1, 5)
	END as varchar(255)) AS WORKFLOW_lEVEL_4,
	CAST(CASE 
			WHEN REGEXP_COUNT(lsf.JOB_PATH, ':') > 5 THEN REGEXP_SUBSTR(lsf.JOB_PATH, '[^:]+', 1, 6)
	END as varchar(255)) AS WORKFLOW_lEVEL_5,
	CAST(	REGEXP_SUBSTR(lsf.JOB_PATH, '[^:]+', 1, REGEXP_COUNT(lsf.JOB_PATH, ':')+ 1) as varchar(255)) AS JOB_NAME
FROM
	STG_LSF_WORKFLOW_XML x,
	XMLTABLE('/JobFlowReq/JobFlowDef/ActivityDef' passing x.xmldata columns JOB_PATH VARCHAR2(500) PATH '@ImplementRefer', IMPLEMENT_TYPE VARCHAR2(10) PATH '@ImplementType') lsf
WHERE
	IMPLEMENT_TYPE = 'Job'
	AND JOB_PATH NOT LIKE '%Link_Inst_%';
	
	
CREATE OR REPLACE VIEW LCF.V_WORKFLOW_JOB_RUN_DELTA
(NUMBER_OF_LEVELS,WORKFLOW_LEVEL_1,WORKFLOW_LEVEL_2,WORKFLOW_LEVEL_3,WORKFLOW_LEVEL_4,WORKFLOW_LEVEL_5,JOB_NAME,LSF_WORKFLOW_RUN_ID,RUN_DATE_TIME,LSF_OBJECT_PRG_ID,OBJECT_NAME,JOB_STATUS,JOB_START_TIME,JOB_END_TIME,ROWS_PROCESSED,ELAPSED_SECONDS,ROWS_PER_SECOND,WORKFLOW_RUN_JOB_GROUP)
AS
WITH wh AS 
(
	SELECT DISTINCT 
		wj.JOB_NAME,
		wj.NUMBER_OF_LEVELS ,
		wj.WORKFLOW_LEVEL_1 ,
		wj.WORKFLOW_LEVEL_2 ,
		wj.WORKFLOW_LEVEL_3 ,
		wj.WORKFLOW_LEVEL_4 ,
		wj.WORKFLOW_LEVEL_5 ,
		wjr.LSF_WORKFLOW_RUN_ID,
		wjr.WORKFLOW_START_TIME,
		wj.RECORD_EFFECTIVE_TIMESTMAP ,
		wj.RECORD_EXPIRY_TIMESTAMP 
	FROM WORKFLOW_JOB wj 
	LEFT JOIN 
	( 
		SELECT LSF_WORKFLOW_RUN_ID
			,WORKFLOW_LEVEL_1
			,min(SUBMIT_TIME) AS WORKFLOW_START_TIME
		FROM V_LSF_JOB_RUN 
		GROUP BY LSF_WORKFLOW_RUN_ID,WORKFLOW_LEVEL_1
	)wjr
	ON wj.WORKFLOW_LEVEL_1 = wjr.WORKFLOW_LEVEL_1 
	AND wjr.WORKFLOW_START_TIME  BETWEEN wj.RECORD_EFFECTIVE_TIMESTMAP AND wj.RECORD_EXPIRY_TIMESTAMP  	
	where wjr.LSF_WORKFLOW_RUN_ID IS NOT null	
)
SELECT 
		wh.NUMBER_OF_LEVELS ,
		wh.WORKFLOW_LEVEL_1 ,
		wh.WORKFLOW_LEVEL_2 ,
		wh.WORKFLOW_LEVEL_3 ,
		wh.WORKFLOW_LEVEL_4 ,
		wh.WORKFLOW_LEVEL_5 ,
		wh.JOB_NAME,
		wh.LSF_WORKFLOW_RUN_ID AS LSF_WORKFLOW_RUN_ID,
		wh.WORKFLOW_START_TIME AS RUN_DATE_TIME,
		nvl(jor.LSF_OBJECT_PRG_ID,-1) AS LSF_OBJECT_PRG_ID,
		CAST(nvl(UPPER( jor.OBJECT_NAME),'UNKNOWN') AS varchar2(255)) AS OBJECT_NAME, 
		CAST(nvl(jor.STATUS, 'Unscheduled') AS varchar2(20)) AS JOB_STATUS,	
		CAST(jor.START_TIME AS timestamp(6)) AS JOB_START_TIME,
		CAST(jor.END_TIME AS timestamp(6)) AS JOB_END_TIME,
		CAST(ROWS_PROCESSED AS NUMBER(14,0)) AS ROWS_PROCESSED,
		CAST((CAST(jor.END_TIME AS DATE) - CAST(jor.START_TIME AS DATE))*24*60*60 AS NUMBER(10,0)) AS ELAPSED_SECONDS,
		CAST(ROWS_PROCESSED / ((CAST(jor.END_TIME AS DATE) - CAST(jor.START_TIME AS DATE))*24*60*60) AS NUMBER(12,2)) AS ROWS_PER_SECOND,
		CAST(wh.LSF_WORKFLOW_RUN_ID || ':' || wh.JOB_NAME AS varchar2(260)) AS WORKFLOW_RUN_JOB_GROUP
FROM wh 
LEFT JOIN LCF.V_LSF_JOB_RUN_WITH_OBJ_RUN jor
ON 
--jor.RNK = 1 AND 
wh.LSF_WORKFLOW_RUN_ID = jor.LSF_WORKFLOW_RUN_ID
AND wh.JOB_NAME = jor.JOB_NAME;

CREATE OR REPLACE VIEW LCF.V_WORKFLOW_STATUS
AS
WITH BASE AS
(
	SELECT *
	FROM 
	(
		SELECT 
			wjr.*,
			RANK() over (PARTITION BY LSF_WORKFLOW_RUN_ID,JOB_NAME,
					CASE WHEN UPPER( JOB_NAME ) LIKE  '%_LOOP_%'  THEN OBJECT_NAME ELSE '-' END 
				ORDER BY LSF_OBJECT_PRG_ID DESC,JOB_START_TIME DESC) RNK
		FROM WORKFLOW_JOB_RUN wjr
	--	WHERE TRUNC(SYSDATE) - TRUNC(CAST(RUN_DATE_TIME  AS DATE)) <= 10
	) ranked
	WHERE RNK = 1
),
STATS AS
(
SELECT LSF_WORKFLOW_RUN_ID, 1 AS WORKFLOW_LEVEL, WORKFLOW_LEVEL_1 AS WORKFLOW, RUN_DATE_TIME
	,MIN(JOB_START_TIME) AS WORKFLOW_START_TIME
	,MAX(JOB_END_TIME) AS WORKFLOW_END_TIME
	,SUM( CASE WHEN JOB_STATUS='Unscheduled' THEN 1 ELSE 0 END) AS UNSCHEDULED
	,SUM( CASE WHEN JOB_STATUS='Pending' THEN 1 ELSE 0 END) AS PENDING
	,SUM( CASE WHEN JOB_STATUS='Success' THEN 1 ELSE 0 END) AS SUCCESS
	,SUM( CASE WHEN JOB_STATUS='Error' THEN 1 ELSE 0 END) AS ERROR
	,SUM( CASE WHEN JOB_STATUS='Running' THEN 1 ELSE 0 END) AS RUNNING
	,SUM( CASE WHEN JOB_STATUS='Killed' THEN 1 ELSE 0 END) AS KILLED
	,COUNT(1) AS TOTAL_JOBS
FROM BASE
GROUP BY LSF_WORKFLOW_RUN_ID,  WORKFLOW_LEVEL_1, RUN_DATE_TIME
UNION all
SELECT LSF_WORKFLOW_RUN_ID, 2 AS WORKFLOW_LEVEL, WORKFLOW_LEVEL_2 AS WORKFLOW, RUN_DATE_TIME 
	,MIN(JOB_START_TIME) AS WORKFLOW_START_TIME
	,MAX(JOB_END_TIME) AS WORKFLOW_END_TIME
	,SUM( CASE WHEN JOB_STATUS='Unscheduled' THEN 1 ELSE 0 END) AS UNSCHEDULED
	,SUM( CASE WHEN JOB_STATUS='Pending' THEN 1 ELSE 0 END) AS PENDING
	,SUM( CASE WHEN JOB_STATUS='Success' THEN 1 ELSE 0 END) AS SUCCESS
	,SUM( CASE WHEN JOB_STATUS='Error' THEN 1 ELSE 0 END) AS ERROR
	,SUM( CASE WHEN JOB_STATUS='Running' THEN 1 ELSE 0 END) AS RUNNING
	,SUM( CASE WHEN JOB_STATUS='Killed' THEN 1 ELSE 0 END) AS KILLED
	,COUNT(1) AS TOTAL_JOBS
FROM BASE
GROUP BY LSF_WORKFLOW_RUN_ID,  WORKFLOW_LEVEL_2, RUN_DATE_TIME
UNION all
SELECT LSF_WORKFLOW_RUN_ID, 3 AS WORKFLOW_LEVEL, WORKFLOW_LEVEL_3 AS WORKFLOW, RUN_DATE_TIME 
	,MIN(JOB_START_TIME) AS WORKFLOW_START_TIME
	,MAX(JOB_END_TIME) AS WORKFLOW_END_TIME
	,SUM( CASE WHEN JOB_STATUS='Unscheduled' THEN 1 ELSE 0 END) AS UNSCHEDULED
	,SUM( CASE WHEN JOB_STATUS='Pending' THEN 1 ELSE 0 END) AS PENDING
	,SUM( CASE WHEN JOB_STATUS='Success' THEN 1 ELSE 0 END) AS SUCCESS
	,SUM( CASE WHEN JOB_STATUS='Error' THEN 1 ELSE 0 END) AS ERROR
	,SUM( CASE WHEN JOB_STATUS='Running' THEN 1 ELSE 0 END) AS RUNNING
	,SUM( CASE WHEN JOB_STATUS='Killed' THEN 1 ELSE 0 END) AS KILLED
	,COUNT(1) AS TOTAL_JOBS
FROM BASE
GROUP BY LSF_WORKFLOW_RUN_ID,  WORKFLOW_LEVEL_3, RUN_DATE_TIME
UNION all
SELECT LSF_WORKFLOW_RUN_ID, 4 AS WORKFLOW_LEVEL, WORKFLOW_LEVEL_4 AS WORKFLOW, RUN_DATE_TIME 
	,MIN(JOB_START_TIME) AS WORKFLOW_START_TIME
	,MAX(JOB_END_TIME) AS WORKFLOW_END_TIME
	,SUM( CASE WHEN JOB_STATUS='Unscheduled' THEN 1 ELSE 0 END) AS UNSCHEDULED
	,SUM( CASE WHEN JOB_STATUS='Pending' THEN 1 ELSE 0 END) AS PENDING
	,SUM( CASE WHEN JOB_STATUS='Success' THEN 1 ELSE 0 END) AS SUCCESS
	,SUM( CASE WHEN JOB_STATUS='Error' THEN 1 ELSE 0 END) AS ERROR
	,SUM( CASE WHEN JOB_STATUS='Running' THEN 1 ELSE 0 END) AS RUNNING
	,SUM( CASE WHEN JOB_STATUS='Killed' THEN 1 ELSE 0 END) AS KILLED
	,COUNT(1) AS TOTAL_JOBS
FROM BASE
GROUP BY LSF_WORKFLOW_RUN_ID,  WORKFLOW_LEVEL_4, RUN_DATE_TIME
UNION all
SELECT LSF_WORKFLOW_RUN_ID, 5 AS WORKFLOW_LEVEL, WORKFLOW_LEVEL_5 AS WORKFLOW, RUN_DATE_TIME 
	,MIN(JOB_START_TIME) AS WORKFLOW_START_TIME
	,MAX(JOB_END_TIME) AS WORKFLOW_END_TIME
	,SUM( CASE WHEN JOB_STATUS='Unscheduled' THEN 1 ELSE 0 END) AS UNSCHEDULED
	,SUM( CASE WHEN JOB_STATUS='Pending' THEN 1 ELSE 0 END) AS PENDING
	,SUM( CASE WHEN JOB_STATUS='Success' THEN 1 ELSE 0 END) AS SUCCESS
	,SUM( CASE WHEN JOB_STATUS='Error' THEN 1 ELSE 0 END) AS ERROR
	,SUM( CASE WHEN JOB_STATUS='Running' THEN 1 ELSE 0 END) AS RUNNING
	,SUM( CASE WHEN JOB_STATUS='Killed' THEN 1 ELSE 0 END) AS KILLED
	,COUNT(1) AS TOTAL_JOBS
FROM BASE
GROUP BY LSF_WORKFLOW_RUN_ID,  WORKFLOW_LEVEL_5, RUN_DATE_TIME	
)
SELECT 
	LSF_WORKFLOW_RUN_ID,
	CAST(WORKFLOW_LEVEL AS NUMBER(10,0)) WORKFLOW_LEVEL,
	WORKFLOW,
	RUN_DATE_TIME,
	WORKFLOW_START_TIME,
	CASE WHEN PENDING=0 AND RUNNING =0 THEN WORKFLOW_END_TIME ELSE NULL END WORKFLOW_END_TIME,
	CASE WHEN PENDING!=0 OR RUNNING !=0 THEN 'Running'
	WHEN UNSCHEDULED = TOTAL_JOBS THEN 'Unscheduled'
	WHEN "ERROR" = 0 AND KILLED=0 THEN 'Success'
	ELSE 'Error' END AS WORFLOW_STATUS,
	CAST(UNSCHEDULED AS NUMBER(10,0)) UNSCHEDULED,
	CAST(PENDING AS NUMBER(10,0)) PENDING,
	CAST(SUCCESS AS NUMBER(10,0)) SUCCESS,
	CAST(ERROR AS NUMBER(10,0)) ERROR,
	CAST(RUNNING AS NUMBER(10,0)) RUNNING,
	CAST(KILLED AS NUMBER(10,0)) KILLED,
	CAST(TOTAL_JOBS AS NUMBER(10,0)) TOTAL_JOBS
FROM STATS
WHERE WORKFLOW IS NOT NULL;

CREATE OR REPLACE VIEW LCF.V_WORKFLOW_STATUS_10DAYS
AS
WITH BASE AS
(
	SELECT *
	FROM 
	(
		SELECT 
			wjr.*,
			RANK() over (PARTITION BY LSF_WORKFLOW_RUN_ID,JOB_NAME,
					CASE WHEN UPPER( JOB_NAME ) LIKE  '%_LOOP_%'  THEN OBJECT_NAME ELSE '-' END 
				ORDER BY LSF_OBJECT_PRG_ID DESC,JOB_START_TIME DESC) RNK
		FROM WORKFLOW_JOB_RUN wjr
		WHERE TRUNC(SYSDATE) - TRUNC(CAST(RUN_DATE_TIME  AS DATE)) <= 10
	) ranked
	WHERE RNK = 1
),
STATS AS
(
SELECT LSF_WORKFLOW_RUN_ID, 1 AS WORKFLOW_LEVEL, WORKFLOW_LEVEL_1 AS WORKFLOW, RUN_DATE_TIME
	,MIN(JOB_START_TIME) AS WORKFLOW_START_TIME
	,MAX(JOB_END_TIME) AS WORKFLOW_END_TIME
	,SUM( CASE WHEN JOB_STATUS='Unscheduled' THEN 1 ELSE 0 END) AS UNSCHEDULED
	,SUM( CASE WHEN JOB_STATUS='Pending' THEN 1 ELSE 0 END) AS PENDING
	,SUM( CASE WHEN JOB_STATUS='Success' THEN 1 ELSE 0 END) AS SUCCESS
	,SUM( CASE WHEN JOB_STATUS='Error' THEN 1 ELSE 0 END) AS ERROR
	,SUM( CASE WHEN JOB_STATUS='Running' THEN 1 ELSE 0 END) AS RUNNING
	,SUM( CASE WHEN JOB_STATUS='Killed' THEN 1 ELSE 0 END) AS KILLED
	,COUNT(1) AS TOTAL_JOBS
FROM BASE
GROUP BY LSF_WORKFLOW_RUN_ID,  WORKFLOW_LEVEL_1, RUN_DATE_TIME
UNION all
SELECT LSF_WORKFLOW_RUN_ID, 2 AS WORKFLOW_LEVEL, WORKFLOW_LEVEL_2 AS WORKFLOW, RUN_DATE_TIME 
	,MIN(JOB_START_TIME) AS WORKFLOW_START_TIME
	,MAX(JOB_END_TIME) AS WORKFLOW_END_TIME
	,SUM( CASE WHEN JOB_STATUS='Unscheduled' THEN 1 ELSE 0 END) AS UNSCHEDULED
	,SUM( CASE WHEN JOB_STATUS='Pending' THEN 1 ELSE 0 END) AS PENDING
	,SUM( CASE WHEN JOB_STATUS='Success' THEN 1 ELSE 0 END) AS SUCCESS
	,SUM( CASE WHEN JOB_STATUS='Error' THEN 1 ELSE 0 END) AS ERROR
	,SUM( CASE WHEN JOB_STATUS='Running' THEN 1 ELSE 0 END) AS RUNNING
	,SUM( CASE WHEN JOB_STATUS='Killed' THEN 1 ELSE 0 END) AS KILLED
	,COUNT(1) AS TOTAL_JOBS
FROM BASE
GROUP BY LSF_WORKFLOW_RUN_ID,  WORKFLOW_LEVEL_2, RUN_DATE_TIME
UNION all
SELECT LSF_WORKFLOW_RUN_ID, 3 AS WORKFLOW_LEVEL, WORKFLOW_LEVEL_3 AS WORKFLOW, RUN_DATE_TIME 
	,MIN(JOB_START_TIME) AS WORKFLOW_START_TIME
	,MAX(JOB_END_TIME) AS WORKFLOW_END_TIME
	,SUM( CASE WHEN JOB_STATUS='Unscheduled' THEN 1 ELSE 0 END) AS UNSCHEDULED
	,SUM( CASE WHEN JOB_STATUS='Pending' THEN 1 ELSE 0 END) AS PENDING
	,SUM( CASE WHEN JOB_STATUS='Success' THEN 1 ELSE 0 END) AS SUCCESS
	,SUM( CASE WHEN JOB_STATUS='Error' THEN 1 ELSE 0 END) AS ERROR
	,SUM( CASE WHEN JOB_STATUS='Running' THEN 1 ELSE 0 END) AS RUNNING
	,SUM( CASE WHEN JOB_STATUS='Killed' THEN 1 ELSE 0 END) AS KILLED
	,COUNT(1) AS TOTAL_JOBS
FROM BASE
GROUP BY LSF_WORKFLOW_RUN_ID,  WORKFLOW_LEVEL_3, RUN_DATE_TIME
UNION all
SELECT LSF_WORKFLOW_RUN_ID, 4 AS WORKFLOW_LEVEL, WORKFLOW_LEVEL_4 AS WORKFLOW, RUN_DATE_TIME 
	,MIN(JOB_START_TIME) AS WORKFLOW_START_TIME
	,MAX(JOB_END_TIME) AS WORKFLOW_END_TIME
	,SUM( CASE WHEN JOB_STATUS='Unscheduled' THEN 1 ELSE 0 END) AS UNSCHEDULED
	,SUM( CASE WHEN JOB_STATUS='Pending' THEN 1 ELSE 0 END) AS PENDING
	,SUM( CASE WHEN JOB_STATUS='Success' THEN 1 ELSE 0 END) AS SUCCESS
	,SUM( CASE WHEN JOB_STATUS='Error' THEN 1 ELSE 0 END) AS ERROR
	,SUM( CASE WHEN JOB_STATUS='Running' THEN 1 ELSE 0 END) AS RUNNING
	,SUM( CASE WHEN JOB_STATUS='Killed' THEN 1 ELSE 0 END) AS KILLED
	,COUNT(1) AS TOTAL_JOBS
FROM BASE
GROUP BY LSF_WORKFLOW_RUN_ID,  WORKFLOW_LEVEL_4, RUN_DATE_TIME
UNION all
SELECT LSF_WORKFLOW_RUN_ID, 5 AS WORKFLOW_LEVEL, WORKFLOW_LEVEL_5 AS WORKFLOW, RUN_DATE_TIME 
	,MIN(JOB_START_TIME) AS WORKFLOW_START_TIME
	,MAX(JOB_END_TIME) AS WORKFLOW_END_TIME
	,SUM( CASE WHEN JOB_STATUS='Unscheduled' THEN 1 ELSE 0 END) AS UNSCHEDULED
	,SUM( CASE WHEN JOB_STATUS='Pending' THEN 1 ELSE 0 END) AS PENDING
	,SUM( CASE WHEN JOB_STATUS='Success' THEN 1 ELSE 0 END) AS SUCCESS
	,SUM( CASE WHEN JOB_STATUS='Error' THEN 1 ELSE 0 END) AS ERROR
	,SUM( CASE WHEN JOB_STATUS='Running' THEN 1 ELSE 0 END) AS RUNNING
	,SUM( CASE WHEN JOB_STATUS='Killed' THEN 1 ELSE 0 END) AS KILLED
	,COUNT(1) AS TOTAL_JOBS
FROM BASE
GROUP BY LSF_WORKFLOW_RUN_ID,  WORKFLOW_LEVEL_5, RUN_DATE_TIME	
)
SELECT 
	LSF_WORKFLOW_RUN_ID,
	CAST(WORKFLOW_LEVEL AS NUMBER(10,0)) WORKFLOW_LEVEL,
	WORKFLOW,
	RUN_DATE_TIME,
	WORKFLOW_START_TIME,
	CASE WHEN PENDING=0 AND RUNNING =0 THEN WORKFLOW_END_TIME ELSE NULL END WORKFLOW_END_TIME,
	CASE WHEN PENDING!=0 OR RUNNING !=0 THEN 'Running'
	WHEN UNSCHEDULED = TOTAL_JOBS THEN 'Unscheduled'
	WHEN "ERROR" = 0 AND KILLED=0 THEN 'Success'
	ELSE 'Error' END AS WORFLOW_STATUS,
	CAST(UNSCHEDULED AS NUMBER(10,0)) UNSCHEDULED,
	CAST(PENDING AS NUMBER(10,0)) PENDING,
	CAST(SUCCESS AS NUMBER(10,0)) SUCCESS,
	CAST(ERROR AS NUMBER(10,0)) ERROR,
	CAST(RUNNING AS NUMBER(10,0)) RUNNING,
	CAST(KILLED AS NUMBER(10,0)) KILLED,
	CAST(TOTAL_JOBS AS NUMBER(10,0)) TOTAL_JOBS
FROM STATS
WHERE WORKFLOW IS NOT NULL;



GRANT SELECT ON LCF.V_LSF_JOB_RUN TO svc_lcf;
GRANT SELECT ON LCF.V_LSF_JOB_RUN_WITH_OBJ_RUN TO svc_lcf;
GRANT SELECT ON LCF.V_LSF_WORKFLOW_JOB TO svc_lcf;
GRANT SELECT ON LCF.V_WORKFLOW_JOB_RUN_DELTA TO svc_lcf;
GRANT SELECT ON LCF.V_WORKFLOW_STATUS TO svc_lcf;
GRANT SELECT ON LCF.V_WORKFLOW_STATUS_10DAYS TO svc_lcf;

GRANT SELECT,UPDATE,DELETE,INSERT ON LCF.WORKFLOW_JOB TO svc_lcf;
GRANT SELECT,UPDATE,DELETE,INSERT ON LCF.WORKFLOW_JOB_RUN TO svc_lcf;

GRANT SELECT,UPDATE,DELETE,INSERT ON LCF.STG_LSF_EVENT_LOG TO svc_lcf;
GRANT SELECT,UPDATE,DELETE,INSERT ON LCF.STG_LSF_WORKFLOW_XML TO svc_lcf;