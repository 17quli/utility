--03/1019 Updated target table special_clients_all
--17/10/19 add TBLNZ_CUSTSEGMENTHIST, TAX_CESSATION_REASONS
--25/10/19 add TDW History tables
--04/11/19 New merge for tblaccount, tblcustomer with TDW_HISTORY_LOADED='N'
--05/11/19 Add ref_lanindicator
--08/11/19 Updated tblcrmlog, tblid fix up primary key/effective timestamp column - issues from peer review
--13/11/19 Updated tdw_tblcustomerinfo with CUSTOMER_KEY as natural/primary key


MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SWRQ' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTWRQ' SCHEMA_NAME,'TBLWEBNOTICE' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGWEBNOTICEKEY' NK_COLUMN_NAMES,'FLNGWEBNOTICEKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'SECOND'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTREF' SCHEMA_NAME,'LANOFFICELOCATION' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRDISTRICTOFFICE' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRDISTRICTOFFICE' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTREF' SCHEMA_NAME,'LANNZ_CUSTOMERCLASS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRCUSTOMERCLASS' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRCUSTOMERCLASS' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTREF' SCHEMA_NAME,'LANNZ_CUSTOMERSEGMENTS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRSEGMENT,FSTRLANGUAGE' NK_COLUMN_NAMES,'FSTRSEGMENT,FSTRLANGUAGE' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTREF' SCHEMA_NAME,'LANCUSTOMERLEVEL' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRCUSTOMERLEVEL' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRCUSTOMERLEVEL' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTREF' SCHEMA_NAME,'LANCUSTOMERSUBTYPE' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRCUSTOMERSUBTYPE' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRCUSTOMERSUBTYPE' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTREF' SCHEMA_NAME,'LANCUSTOMERTYPE' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRCUSTOMERTYPE' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRCUSTOMERTYPE' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'OLD_SYSTEM_NUMBERS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'OLD_SYSTEM_NUMBER' NK_COLUMN_NAMES,'OLD_SYSTEM_NUMBER,DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'OFFICES' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'OFFICE_CODE' NK_COLUMN_NAMES,'OFFICE_CODE,DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'EXTERNAL_REFERENCES' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER,LOCATION_NUMBER,EXTERNAL_ORG_CODE,EXTERNAL_ID,DATE_START' NK_COLUMN_NAMES,'IRD_NUMBER,LOCATION_NUMBER,EXTERNAL_ORG_CODE,EXTERNAL_ID,DATE_START,DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'ENTITY_TYPES' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'ENTITY_TYPE_CODE' NK_COLUMN_NAMES,'ENTITY_TYPE_CODE,DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'ENTITY_CLASSES' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'ENTITY_CLASS_CODE' NK_COLUMN_NAMES,'ENTITY_CLASS_CODE,DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'date_applied < date_ceased or date_ceased is null ' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'CUSTOMERS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER,LOCATION_NUMBER' NK_COLUMN_NAMES,'IRD_NUMBER,LOCATION_NUMBER,DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'CLIENTS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER' NK_COLUMN_NAMES,'IRD_NUMBER, DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'CLIENT_NAMES' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER,LOCATION_NUMBER,CLIENT_NAME_TYPE,SEQUENCE_NUMBER' NK_COLUMN_NAMES,'IRD_NUMBER,LOCATION_NUMBER,CLIENT_NAME_TYPE,SEQUENCE_NUMBER,DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'CLIENT_CODES' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER,LOCATION_NUMBER,TAX_TYPE,CLIENT_CODE_TYPE,CLIENT_CODE_VALUE,DATE_START' NK_COLUMN_NAMES,'IRD_NUMBER,LOCATION_NUMBER,TAX_TYPE,CLIENT_CODE_TYPE,CLIENT_CODE_VALUE,DATE_START,DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'where date_applied < date_ceased or date_ceased is null' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'AGENTS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER, LOCATION_NUMBER' NK_COLUMN_NAMES,'IRD_NUMBER, LOCATION_NUMBER, DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'where date_applied < date_ceased or date_ceased is null' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLVISIT' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGVISITKEY' NK_COLUMN_NAMES,'FLNGVISITKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'SECOND'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLNZ_VISITMANAGEDCALL' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLNZ_CUSTOMERTAXRESIDENCY' SOURCE_OBJECT_NAME,'TBLNZ_CUSTTAXRESIDENCY' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY,FINTSEQ' NK_COLUMN_NAMES,'FLNGDOCKEY,FINTSEQ,FDTMWHEN' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H4' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLCUSTOMERINFO' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGCUSTOMERKEY' NK_COLUMN_NAMES,'FLNGCUSTOMERKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLINDICATOR' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGINDICATORKEY' NK_COLUMN_NAMES,'FLNGINDICATORKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES, ACCOUNT.ACCOUNTS(CORE_TAX), ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX), ACCOUNT.ACCOUNTS(WITHHOLDING_TAX), ACCOUNT.ACCOUNTS(SOCIAL_POLICY), ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'SECOND'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLNZ_CUSTOMERSTD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLNZ_CSTCOMINFO' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLNZ_ACCIDGEDU' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLNZ_ACCIDGOVR' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY,FDTMWHEN' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLNAMERECORD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FI64NAMEKEY' NK_COLUMN_NAMES,'FI64NAMEKEY,FLNGVER,FDTMEFFECTIVETO' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES, ACCOUNT.ACCOUNTS(CORE_TAX), ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX), ACCOUNT.ACCOUNTS(WITHHOLDING_TAX), ACCOUNT.ACCOUNTS(SOCIAL_POLICY), ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'FDTMEFFECTIVETO'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'DAY'EFFECTIVE_TIMESTAMP_GRAIN,'FDTMEFFECTIVEFROM'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLNAICS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGNAICSKEY' NK_COLUMN_NAMES,'FLNGNAICSKEY,FLNGVER,FDTMWHEN' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'HALF MINUTE'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLMAILITEM' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGMAILITEMKEY' NK_COLUMN_NAMES,'FLNGMAILITEMKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLDOCPOSTTRANSACTION' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY,FSTRFIELD,FLNGTABLEROW,FLNGDOCVERLAST,FINTPOSTING' NK_COLUMN_NAMES,'FLNGDOCKEY,FSTRFIELD,FLNGTABLEROW,FLNGDOCVERLAST,FLNGVER,FINTPOSTING' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'SELECT z.flngDocKey,z.fstrField,z.flngTableRow,z.flngDocVerLast,z.flngVer,z.flngVerLast,z.fintPosting,z.fi64SourceKey,z.fstrSource,z.fstrIdType,z.fstrId,z.fstrNameControl,z.flngCustomerKey,z.flngAccountKey,z.fstrAccountType,z.fdtmFilingPeriod,z.flngBillItemKey,z.fstrBillType,z.fdtmBillDue,z.fstrGroup,z.flngTransKey,z.fstrTransType,z.fdtmEffect,z.fdtmReport,z.fcurAmount,z.fintWorkStatus,z.fblnProcessed,z.fdtmReviewed,z.fdtmPosted,z.fdtmReversed,z.fblnUpdatePeriod,z.fstrWho,z.fdtmWhen FROM NZO_GTAPP.dbo.tblDocPostTransaction z WHERE z.fstrAccountType IN (''FAM'',''IIT'') AND z.fdtmFilingPeriod = ''31-Mar-2019'' ' CUSTOM_SQL,'FDTMEFFECT'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLCUSTOMERMAIL' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGMAILITEMKEY' NK_COLUMN_NAMES,'FLNGMAILITEMKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLCUSTOMERSTD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLCUSTOMERLEVEL' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLACCOUNTINFO' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGACCOUNTKEY' NK_COLUMN_NAMES,'FLNGACCOUNTKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'ACCOUNT.ACCOUNTS(CORE_TAX), ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX), ACCOUNT.ACCOUNTS(WITHHOLDING_TAX), ACCOUNT.ACCOUNTS(SOCIAL_POLICY), ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLACCOUNT' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGACCOUNTKEY' NK_COLUMN_NAMES,'FLNGACCOUNTKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'ACCOUNT.ACCOUNTS(CORE_TAX), ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX), ACCOUNT.ACCOUNTS(WITHHOLDING_TAX), ACCOUNT.ACCOUNTS(SOCIAL_POLICY), ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,' (FDTMWHEN_INFO)  CASE    WHEN ACCINFO.FDTMWHEN > ACC.FDTMWHEN THEN ACCINFO.FDTMWHEN ELSE ACC.FDTMWHEN END'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLACCOUNT' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGACCOUNTKEY' NK_COLUMN_NAMES,'FLNGACCOUNTKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'ACCOUNT.ACCOUNTS(CORE_TAX), ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX), ACCOUNT.ACCOUNTS(WITHHOLDING_TAX), ACCOUNT.ACCOUNTS(SOCIAL_POLICY), ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,' (FDTMWHEN_INFO)  CASE 
WHEN ACCINFO.FDTMWHEN > ACC.FDTMWHEN       THEN ACCINFO.FDTMWHEN ELSE ACC.FDTMWHEN END'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);


MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'SPECIAL_CLIENTS_ALL' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER' NK_COLUMN_NAMES,'IRD_NUMBER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLNZ_CALLLOG' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGVISITKEY' NK_COLUMN_NAMES,'FLNGVISITKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'SECOND'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLINDICATOR' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGINDICATORKEY' NK_COLUMN_NAMES,'FLNGINDICATORKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES, ACCOUNT.ACCOUNTS(CORE_TAX), ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX), ACCOUNT.ACCOUNTS(WITHHOLDING_TAX), ACCOUNT.ACCOUNTS(SOCIAL_POLICY), ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'SECOND'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLCUSTOMER' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGCUSTOMERKEY' NK_COLUMN_NAMES,'FLNGCUSTOMERKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,'FDTMWHEN_INFO (TBLCUSTOMERINFO.FDTMWHEN)'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);



MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLCRMLOG' SOURCE_OBJECT_NAME,'TBLCRMEXTENDEDLOG' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGCRMKEY' NK_COLUMN_NAMES,'FLNGCRMKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.INTERACTIONS' DATA_DOMAIN,'SELECT z.flngCrmKey,z.flngVer,z.flngVerLast,z.fstrCrmSource,z.fstrCrmType,z.flngParentCrmKey,z.flngCustomerKey,z.fintProfileNumber,z.flngAccountKey,z.fstrAccountType,z.fdtmFilingPeriod,z.flngBillItemKey,z.fintBillItem,z.flngFolderKey,z.fi64SourceKey,z.fstrSourceId,z.fstrSourceType,z.fstrSourceData,COALESCE(w.fstrExtendedData,z.fstrData) as fstrData,z.fblnExtended,z.fblnPrivate,z.fblnHasChildren,z.fblnHighImportance,z.fblnSystem,z.fstrEditedBy,z.fdtmEdited,z.fstrComment,z.fblnCommentExists,z.fstrWho,z.fdtmWhen FROM NZP_GTAPP.dbo.tblCRMLog z LEFT JOIN NZP_GTAPP.dbo.tblCRMExtendedData w ON z.flngCRMKey =w.flngCRMKey WHERE CONVERT(varchar,fdtmWhen,120) > CONVERT(varchar,CAST (''#LOWDATE#''  AS DATETIME2),120) AND CONVERT(varchar,fdtmWhen,120) <= CONVERT(varchar,CAST (''#HIGHDATE#''  AS DATETIME2),120)' CUSTOM_SQL,' (CHANGECAPTURE ) CASE 
   WHEN CRM.FDTMEDITED !> ''9000-01-01'' AND CRM.FDTMEDITED > CRM.FDTMWHEN
      THEN CRM.FDTMEDITED
ELSE CRM.FDTMWHEN
END'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,'CHANGECAPTURE'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);


MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLID' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGIDKEY' NK_COLUMN_NAMES,'FLNGIDKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES, ACCOUNT.ACCOUNTS(CORE_TAX), ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX), ACCOUNT.ACCOUNTS(WITHHOLDING_TAX), ACCOUNT.ACCOUNTS(SOCIAL_POLICY), ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'SECOND'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);


/*
-- Additional tables for testing 
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'LCF' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'LCF' SCHEMA_NAME,'Z_TEST$_P2' SOURCE_OBJECT_NAME,'Z_TEST_P2' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'TEST_ID_$' NK_COLUMN_NAMES,'TEST_ID_$' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'DATE_APPLIED'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'LCF' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'LCF' SCHEMA_NAME,'Z_TEST$_P3' SOURCE_OBJECT_NAME,'Z_TEST_P3' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'TEST_ID_$' NK_COLUMN_NAMES,'TEST_ID_$' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'EVENTEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'DATE_APPLIED'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'LCF' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'LCF' SCHEMA_NAME,'Z_TEST$_P1' SOURCE_OBJECT_NAME,'Z_TEST_P1' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'TEST_ID_$' NK_COLUMN_NAMES,'TEST_ID_$,TEST_ID2_$' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'LCF' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'LCF' SCHEMA_NAME,'MD_TEST_CUSTOMSQL_P2' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'TEST_ID' NK_COLUMN_NAMES,'TEST_ID' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'SELECT  * from  lcf.MD_TEST_CUSTOMSQL_P2  WHERE CONVERT(varchar,fdtmWhen,120) > CONVERT(varchar,CAST (''#LOWDATE#''  AS DATETIME2),120) AND CONVERT(varchar,fdtmWhen,120) <= CONVERT(varchar,CAST (''#HIGHDATE#''  AS DATETIME2),120)' CUSTOM_SQL,'MAX(CASE WHEN FDTMEDITED >= ''9000-01-01 00:00:00'' THEN ''1900-01-01 00:00:00'' ELSE FDTMEDITED END, FDTMWHEN)'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'LCF' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'LCF' SCHEMA_NAME,'Z_TEST$_P2H1' SOURCE_OBJECT_NAME,'Z_TEST_P2H1' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'TEST_ID_$' NK_COLUMN_NAMES,'TEST_ID_$' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'DATE_APPLIED 'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'SECOND'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'LCF' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'LCF' SCHEMA_NAME,'Z_TEST$_P2H3' SOURCE_OBJECT_NAME,'Z_TEST_P2H3' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'TEST_ID_$' NK_COLUMN_NAMES,'TEST_ID_$' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'DATE_APPLIED'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'EFFECTIVE_TO'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'EFFECTIVE_FROM'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLPROFILE' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGCUSTOMERKEY,FINTPROFILENUMBER' NK_COLUMN_NAMES,'FLNGCUSTOMERKEY,FINTPROFILENUMBER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'TAX_CESSATION_REASONS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'CESSATION_REASON_CODE' NK_COLUMN_NAMES,'CESSATION_REASON_CODE,DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'ACCOUNT.ACCOUNTS(CORE_TAX)' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTREF' SCHEMA_NAME,'LANINDICATOR' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE, FSTRINDICATOR' NK_COLUMN_NAMES,'FSTRLANGUAGE, FSTRINDICATOR' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SREF' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTREF' SCHEMA_NAME,'LANCOUNTRY' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FSTRLANGUAGE,FSTRCOUNTRY' NK_COLUMN_NAMES,'FSTRLANGUAGE,FSTRCOUNTRY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES, ACCOUNT.ACCOUNTS(CORE_TAX), ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX), ACCOUNT.ACCOUNTS(WITHHOLDING_TAX), ACCOUNT.ACCOUNTS(SOCIAL_POLICY), ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

*/

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLNZ_CUSTOMERSEGMENTHISTORY' SOURCE_OBJECT_NAME,'TBLNZ_CUSTSEGMENTHIST' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY ' NK_COLUMN_NAMES,'FLNGDOCKEY,FLNGVERLAST' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'MINUTE'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZO_GTAPP' SCHEMA_NAME,'TBLCUSTOMERHISTORY' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY, FLNGVERLAST' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

-- Not required for prod
/*MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'LCF' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'LCF' SCHEMA_NAME,'OBJECT_RUN' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'OBJECT_RUN_KEY' NK_COLUMN_NAMES,'OBJECT_RUN_KEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'LCF' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'LCF' SCHEMA_NAME,'DIP_OBJECT_RUN' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'OBJECT_RUN_KEY' NK_COLUMN_NAMES,'OBJECT_RUN_KEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
*/


-- TDW History Migation 


MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'TDW' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'TDW' SCHEMA_NAME,'TBL_NZ_CUSTOMERSTD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY,EFFECTIVEFROM' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'EFFECTIVE_FROM'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'TDW' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'TDW' SCHEMA_NAME,'TBL_CUSTOMERSTD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY,EFFECTIVEFROM' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'EFFECTIVE_FROM'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'TDW' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'TDW' SCHEMA_NAME,'TBL_ACCOUNTINFO' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'ACCOUNT_KEY' NK_COLUMN_NAMES,'ACCOUNT_KEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'ACCOUNT.ACCOUNTS(CORE_TAX), ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX), ACCOUNT.ACCOUNTS(WITHHOLDING_TAX), ACCOUNT.ACCOUNTS(SOCIAL_POLICY), ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'EFFECTIVE_FROM'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'SECOND'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'TDW' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'TDW' SCHEMA_NAME,'TBL_CUSTOMERINFO' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'CUSTOMER_KEY' NK_COLUMN_NAMES,'CUSTOMER_KEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'EFFECTIVE_FROM'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);


COMMIT;
