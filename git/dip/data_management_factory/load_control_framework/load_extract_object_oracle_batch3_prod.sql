/**************************************************************************************************
5/12/19  ird0dxm Initial script
6/12/19  ird0sxd Commented out FRD_TBLFRDACTIONRESULTS, TBLFRDACTIONS and added TBLFRDRULES, TBLFRDRULERESULT
07/12/19 ird0sxd Updated the target table name for TBLCOLLECTPAYMENTPLAN
07/12/19 ird0sxd Updated natural keys to match excel sheet and job definition for DSS_ELEMENTS, DSS_CASES, APP_TBLCOLLECT
10/12/19 ird0sxd Remerge dss_special_clients to fix source_table_name
11/12/19 ird0sxd Commented out tblaccountstd. That is not part of this release. Added tblnz_accountstd
12/12/19 ird0sxd Added CM_AUDIT_CASES , TBL_PERIOD, TBL_COLLECT
12/12/19 ird0sxd Replaced all occurrences of NZO to NZP. Else the merge to OBJECT will fail with null system key error
12/12/19 ird0sxd Removed object_short_name value from tblcollectpaymentplan
 
**************************************************************************************************/


--- tblCOLLECT

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTAPP' SCHEMA_NAME,'TBLCOLLECT' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGCOLLECTKEY' NK_COLUMN_NAMES,'FLNGCOLLECTKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'DEBT.COLLECTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- tblCOLLECTPERIOD

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTAPP' SCHEMA_NAME,'TBLCOLLECTPERIOD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGCOLLECTKEY, FLNGACCOUNTKEY, FDTMFILINGPERIOD,FLNGBILLITEMKEY' NK_COLUMN_NAMES,'FLNGCOLLECTKEY, FLNGACCOUNTKEY, FDTMFILINGPERIOD,FLNGBILLITEMKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'DEBT.COLLECTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- tblCOLLECTPYMENTPLAN

--MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTAPP' SCHEMA_NAME,'TBLCOLLECTPAYMENTPLAN' SOURCE_OBJECT_NAME,'TBLCOLLECTPYMENTPLAN' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGPAYMENTPLANKEY' NK_COLUMN_NAMES,'FLNGPAYMENTPLANKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'DEBT.COLLECTIONS,DEBT.INSTALMENT_PLANS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'SECOND'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTAPP' SCHEMA_NAME,'TBLCOLLECTPAYMENTPLAN' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGPAYMENTPLANKEY' NK_COLUMN_NAMES,'FLNGPAYMENTPLANKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'DEBT.COLLECTIONS,DEBT.INSTALMENT_PLANS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'SECOND'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

---- tblLEAD

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTAPP' SCHEMA_NAME,'TBLLEAD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGLEADKEY, FLNGVER	' NK_COLUMN_NAMES,'FLNGLEADKEY, FLNGVER	' PK_COLUMN_NAMES,'FSTRDATA,FSTRLEADPARAMETERS' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'WORK.WORK_ITEMS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- tblPERIODBILLITEM

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTAPP' SCHEMA_NAME,'TBLPERIODBILLITEM' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGBILLITEMKEY' NK_COLUMN_NAMES,'FLNGBILLITEMKEY,FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'DEBT.COLLECTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- tblPERIOD

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTAPP' SCHEMA_NAME,'TBLPERIOD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGACCOUNTKEY,FDTMFILINGPERIOD' NK_COLUMN_NAMES,'FLNGACCOUNTKEY,FDTMFILINGPERIOD' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'RETURN.RETURNS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

-- TBL_PERIOD
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'TDW' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'TDW' SCHEMA_NAME,'TBL_PERIOD' SOURCE_OBJECT_NAME,'TBL_PERIOD' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGACCOUNTKEY,FDTMFILINGPERIOD' NK_COLUMN_NAMES,'FLNGACCOUNTKEY,FDTMFILINGPERIOD' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'RETURN.RETURNS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxr1' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

/*--- tblnz_ACCOUNTSTD

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTAPP' SCHEMA_NAME,'TBLACCOUNTSTD' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'ACCOUNT.ACCOUNTS(CORE_TAX), ACCOUNT.ACCOUNTS(INTERNATIONAL_TAX), ACCOUNT.ACCOUNTS(WITHHOLDING_TAX), ACCOUNT.ACCOUNTS(SOCIAL_POLICY), ACCOUNT.ACCOUNTS(LEGAL)' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
*/



--- tblnz_CAMPAIGN

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTAPP' SCHEMA_NAME,'TBLNZ_CAMPAIGN' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGDOCKEY' NK_COLUMN_NAMES,'FLNGDOCKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'WORK.WORK_ITEMS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- tblnz_INSTLMENTAGMTDFLT

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTAPP' SCHEMA_NAME,'TBLNZ_INSTALMENTAGMTDEFAULT' SOURCE_OBJECT_NAME,'TBLNZ_INSTLMENTAGMTDFLT' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGPAYMENTPLANKEY' NK_COLUMN_NAMES,'FLNGPAYMENTPLANKEY, FLNGVER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'DEBT.INSTALMENT_PLANS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,'SECOND'DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H1' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- tblprofile

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SAPP' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTAPP' SCHEMA_NAME,'TBLPROFILE' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGCUSTOMERKEY,FINTPROFILENUMBER' NK_COLUMN_NAMES,'FLNGCUSTOMERKEY,FINTPROFILENUMBER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- CASE_ACTIONS

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'CASE_ACTIONS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'CASE_KEY, SEQUENCE_NUMBER, CASE_ACTION_TYPE_CODE' NK_COLUMN_NAMES,'CASE_KEY, SEQUENCE_NUMBER, ACTION_CODE_TYPE' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'DEBT.COLLECTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- CASES

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'CASES' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER, LOCATION_NUMBER, CASE_KEY, CASE_TYPE_CODE, CASE_TYPE_GROUP_CODE' NK_COLUMN_NAMES,'IRD_NUMBER, LOCATION_NUMBE,R CASE_KEY, CASE_TYPE_CODE, CASE_TYPE_GROUP_CODE,DATE_APLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'DEBT.COLLECTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- CROSS_REFERENCES

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'CROSS_REFERENCES' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'REFERENCE_TYPE,IRD_NUMBER_FROM,IRD_NUMBER_TO,LATEST_YEAR' NK_COLUMN_NAMES,'REFERENCE_TYPE,IRD_NUMBER_FROM,IRD_NUMBER_TO,LATEST_YEAR,DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES,RELATIONSHIP.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- ELEMENTS

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'ELEMENTS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER, CASE_KEY ,CASE_TYPE_CODE,SYSTEM_PLAINT_NUMBER,RETURN_PERIOD_DATE, TAX_TYPE' NK_COLUMN_NAMES,'' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'DEBT.COLLECTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- POLICING_PROFILES

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'POLICING_PROFILES' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER,LOCATION_NUMBER,RETURN_TYPE,RETURN_PERIOD_DATE' NK_COLUMN_NAMES,'IRD_NUMBER,LOCATION_NUMBER,RETURN_TYPE,RETURN_PERIOD_DATE,DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'DEBT.COLLECTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- TAX_CSA

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'TAX_CSA' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER, LOCATION_NUMBER, TAX_TYPE,TREG_DATE_START' NK_COLUMN_NAMES,'IRD_NUMBER, LOCATION_NUMBER, TAX_TYPE,TREG_DATE_START, DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'DEBT.COLLECTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

/*--- FRD_TBLFRDACTIONRESULTS

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'LCF' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'LCF' SCHEMA_NAME,'OBJECT_RUN' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'OBJECT_RUN_KEY' NK_COLUMN_NAMES,'OBJECT_RUN_KEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0oxj' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

--- FRD_TBLFRDACTIONS

MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SFRD' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTFRD' SCHEMA_NAME,'TBLFRDACTIONS' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGFRAUDPLANKEY,FLNGACTIONKEY' NK_COLUMN_NAMES,'FLNGFRAUDPLANKEY,FLNGACTIONKEY,FLNGVER' PK_COLUMN_NAMES,'FVNTQUIZCONFIGURATION,FVNTRESPONSERESULTS,FVNTACTIONS,FVNTRANGEDATA,FVNTDEXRANGEDATA,FVNTRULEDATA,FVNTACTIONDATA' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'AUDIT.AUDIT' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);
*/


--TBLFRDRULES
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SFRD' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTFRD' SCHEMA_NAME,'TBLFRDRULES' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGFRAUDPLANKEY,FLNGRULEKEY' NK_COLUMN_NAMES,'FLNGFRAUDPLANKEY,FLNGRULEKEY,FLNGVER' PK_COLUMN_NAMES,'FVNTRULEDATA ' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'AUDIT.AUDIT' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

-- TBLFRDRULERESULT
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'SFRD' SYSTEM_NAME,'MSSQL' SYSTEM_TYPE,'NZP_GTFRD' SCHEMA_NAME,'TBLFRDRULERESULT' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGFRAUDPLANKEY,FLNGRETURNKEY,FLNGRULEKEY' NK_COLUMN_NAMES,'FLNGFRAUDPLANKEY,FLNGRETURNKEY,FLNGRULEKEY' PK_COLUMN_NAMES,'FVNTRULEDATA ' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'AUDIT.AUDIT' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0nxl' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);


MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'SPECIAL_CLIENTS' SOURCE_OBJECT_NAME,'SPECIAL_CLIENTS_ALL' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'IRD_NUMBER' NK_COLUMN_NAMES,'IRD_NUMBER' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'FULLCOMPARISON' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'Y' SENSITIVE_DATA_FLAG,'PARTY.PARTIES' DATA_DOMAIN,'  select c.ird_number ird_number,case when sc.ird_number is NULL then ''STD'' else ''SPC''  end special_classification   from dss.clients  c   LEFT  join dss.special_clients sc   on c.ird_number=sc.ird_number ' CUSTOM_SQL,''CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'' HISTORY_TYPE,'ird0sxd' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

-- CM_AUDIT_CASES
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'DSS' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'DSS' SCHEMA_NAME,'CM_AUDIT_CASES' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'CASE_ROWID, CASE_TYPE_DESC' NK_COLUMN_NAMES,'CASE_ROWID, CASE_TYPE_DESC, DATE_APPLIED' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'AUDIT.AUDIT' DATA_DOMAIN,'' CUSTOM_SQL,'TIMESTAMP'CHANGE_CAPTURE_TIMESTAMP_COLUMN,'DATE_CEASED'EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,'SECOND'PURGE_GRAIN,'SECOND'EFFECTIVE_TIMESTAMP_GRAIN,'DATE_APPLIED'EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H3' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);


-- TDW_COLLECT
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'TDW' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'TDW' SCHEMA_NAME,'TBL_COLLECT' SOURCE_OBJECT_NAME,'' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGCOLLECTKEY' NK_COLUMN_NAMES,'FLNGCOLLECTKEY' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'DEBT.COLLECTIONS' DATA_DOMAIN,'' CUSTOM_SQL,'EFFECTIVE_FROM'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'Y' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0dxi' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

-- TDW_PERIOD
MERGE INTO LCF.EXTRACT_OBJECT EO USING (SELECT 'TDW' SYSTEM_NAME,'ORACLE' SYSTEM_TYPE,'TDW' SCHEMA_NAME,'TBLPERIOD' SOURCE_OBJECT_NAME,'TBL_PERIOD' TARGET_OBJECT_SHORT_NAME,'' TARGET_DB,'FLNGACCOUNTKEY,FDTMFILINGPERIOD' NK_COLUMN_NAMES,'FLNGACCOUNTKEY,FDTMFILINGPERIOD' PK_COLUMN_NAMES,'' EXCLUDED_COLUMNS,'CHANGEEXTRACT' LOAD_PATTERN_NAME,10960 RETENTION_PERIOD,'N' SENSITIVE_DATA_FLAG,'RETURN.RETURNS' DATA_DOMAIN,'' CUSTOM_SQL,'FDTMWHEN'CHANGE_CAPTURE_TIMESTAMP_COLUMN,''EFFECTIVE_TO_TIMESTAMP_COLUMN,''DUPLICATION_TIMESTAMP_GRAIN,''PURGE_GRAIN,''EFFECTIVE_TIMESTAMP_GRAIN,''EFFECTIVE_FROM_TIMESTAMP_COLUMN,'N' HISTORY_LOADED_FROM_TDW,'H2' HISTORY_TYPE,'ird0sxr1' CREATED_BY,SYSDATE CREATED_DATE  FROM DUAL ) VAL ON (UPPER(EO.SYSTEM_NAME) = VAL.SYSTEM_NAME AND UPPER(EO.SYSTEM_TYPE) = VAL.SYSTEM_TYPE AND UPPER(EO.SCHEMA_NAME) = VAL.SCHEMA_NAME AND UPPER(EO.SOURCE_OBJECT_NAME) = VAL.SOURCE_OBJECT_NAME)  WHEN MATCHED THEN UPDATE SET EO.TARGET_OBJECT_SHORT_NAME = VAL.TARGET_OBJECT_SHORT_NAME,EO.TARGET_DB = VAL.TARGET_DB,EO.NK_COLUMN_NAMES = VAL.NK_COLUMN_NAMES,EO.PK_COLUMN_NAMES = VAL.PK_COLUMN_NAMES,EO.EXCLUDED_COLUMNS = VAL.EXCLUDED_COLUMNS,EO.LOAD_PATTERN_NAME = VAL.LOAD_PATTERN_NAME,EO.RETENTION_PERIOD = VAL.RETENTION_PERIOD,EO.SENSITIVE_DATA_FLAG=VAL.SENSITIVE_DATA_FLAG,EO.DATA_DOMAIN=VAL.DATA_DOMAIN,EO.CUSTOM_SQL = VAL.CUSTOM_SQL,EO.CHANGE_CAPTURE_TIMESTAMP_COLUMN = VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,EO.EFFECTIVE_TO_TIMESTAMP_COLUMN = VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,EO.EFFECTIVE_FROM_TIMESTAMP_COLUMN = VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,EO.HISTORY_LOADED_FROM_TDW=VAL.HISTORY_LOADED_FROM_TDW,EO.PURGE_GRAIN = VAL.PURGE_GRAIN,EO.EFFECTIVE_TIMESTAMP_GRAIN = VAL.EFFECTIVE_TIMESTAMP_GRAIN,EO.DUPLICATION_TIMESTAMP_GRAIN = VAL.DUPLICATION_TIMESTAMP_GRAIN,EO.HISTORY_TYPE=VAL.HISTORY_TYPE,EO.CREATED_BY=VAL.CREATED_BY,EO.CREATED_DATE=VAL.CREATED_DATE  WHEN NOT MATCHED THEN INSERT (SYSTEM_NAME,SYSTEM_TYPE,SCHEMA_NAME,SOURCE_OBJECT_NAME,TARGET_OBJECT_SHORT_NAME,TARGET_DB,NK_COLUMN_NAMES,PK_COLUMN_NAMES,EXCLUDED_COLUMNS,LOAD_PATTERN_NAME,SENSITIVE_DATA_FLAG,DATA_DOMAIN,RETENTION_PERIOD,CUSTOM_SQL,CHANGE_CAPTURE_TIMESTAMP_COLUMN,EFFECTIVE_TO_TIMESTAMP_COLUMN,EFFECTIVE_FROM_TIMESTAMP_COLUMN,HISTORY_LOADED_FROM_TDW,PURGE_GRAIN,EFFECTIVE_TIMESTAMP_GRAIN,DUPLICATION_TIMESTAMP_GRAIN,HISTORY_TYPE,CREATED_BY,CREATED_DATE)  VALUES (VAL.SYSTEM_NAME,VAL.SYSTEM_TYPE,VAL.SCHEMA_NAME,VAL.SOURCE_OBJECT_NAME,VAL.TARGET_OBJECT_SHORT_NAME,VAL.TARGET_DB,VAL.NK_COLUMN_NAMES,VAL.PK_COLUMN_NAMES,VAL.EXCLUDED_COLUMNS,VAL.LOAD_PATTERN_NAME,VAL.SENSITIVE_DATA_FLAG,VAL.DATA_DOMAIN,VAL.RETENTION_PERIOD,VAL.CUSTOM_SQL,VAL.CHANGE_CAPTURE_TIMESTAMP_COLUMN,VAL.EFFECTIVE_TO_TIMESTAMP_COLUMN,VAL.EFFECTIVE_FROM_TIMESTAMP_COLUMN,VAL.HISTORY_LOADED_FROM_TDW,VAL.PURGE_GRAIN,VAL.EFFECTIVE_TIMESTAMP_GRAIN,VAL.DUPLICATION_TIMESTAMP_GRAIN,VAL.HISTORY_TYPE,VAL.CREATED_BY,VAL.CREATED_DATE);

COMMIT;