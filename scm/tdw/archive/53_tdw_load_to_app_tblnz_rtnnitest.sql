-- Load data manually from RAW TDW tables into RAW START table
select count(1) from  ${var:target_db}.${var:app_tbl_name};

INSERT INTO TABLE  ${var:target_db}.${var:app_tbl_name} 
SELECT
CAST(FLNGDOCKEY AS int ) AS flngdockey,
CAST(FCURRWT AS decimal(19,4) ) AS fcurrwt,
CAST(FCURGROSSINTEREST AS decimal(19,4) ) AS fcurgrossinterest,
CAST(FCURDIVIDENDIMPUTATION AS decimal(19,4) ) AS fcurdividendimputation,
CAST(FCURDIVIDENDRWT AS decimal(19,4) ) AS fcurdividendrwt,
CAST(FCURDIVIDENDGROSS AS decimal(19,4) ) AS fcurdividendgross,
CAST(FCURMAORICREDITS AS decimal(19,4) ) AS fcurmaoricredits,
CAST(FCURMAORIDISTRIBUTIONS AS decimal(19,4) ) AS fcurmaoridistributions,
CAST(FCURTRUSTCREDITS AS decimal(19,4) ) AS fcurtrustcredits,
CAST(FCURTRUSTINCOME AS decimal(19,4) ) AS fcurtrustincome,
CAST(FCUROVERSEASTAX AS decimal(19,4) ) AS fcuroverseastax,
CAST(FCUROVERSEASINCOME AS decimal(19,4) ) AS fcuroverseasincome,
CAST(FCURLTCCREDITS AS decimal(19,4) ) AS fcurltccredits,
CAST(FCURLTCACTIVEINCOME AS decimal(19,4) ) AS fcurltcactiveincome,
CAST(FCURLTCDEDUCTIONS AS decimal(19,4) ) AS fcurltcdeductions,
CAST(FCURLTCPRIORDEDUCTIONS AS decimal(19,4) ) AS fcurltcpriordeductions,
CAST(FCURADJUSTEDINCOME AS decimal(19,4) ) AS fcuradjustedincome,
CAST(FCURBUSINESSINCOME AS decimal(19,4) ) AS fcurbusinessincome,
CAST(FCURTOTALOTHERCREDITS AS decimal(19,4) ) AS fcurtotalothercredits,
CAST(FCURTOTALOTHERINCOME AS decimal(19,4) ) AS fcurtotalotherincome,
CAST(FCURTOTALCREDITS AS decimal(19,4) ) AS fcurtotalcredits,
CAST(FCURTOTALINCOME AS decimal(19,4) ) AS fcurtotalincome,
CAST(FCURRLWT AS decimal(19,4) ) AS fcurrlwt,
CAST(FCURBENEFICIARYINCOME AS decimal(19,4) ) AS fcurbeneficiaryincome,
CAST(FCURTRUSTEEINCOME AS decimal(19,4) ) AS fcurtrusteeincome,
CAST(FCURTAXPAYABLETRUSTEESINCOME AS decimal(19,4) ) AS fcurtaxpayabletrusteesincome,
CAST(FCUREXPENSESCLAIMED AS decimal(19,4) ) AS fcurexpensesclaimed,
CAST(FCURNETLOSSBROUGHTFORWARD AS decimal(19,4) ) AS fcurnetlossbroughtforward,
CAST(FCURNETLOSSCLAIMED AS decimal(19,4) ) AS fcurnetlossclaimed,
CAST(FCURTOTALDISTRIBUTIONS AS decimal(19,4) ) AS fcurtotaldistributions,
CAST(FCURTAXABLEDISTRIBUTIONS AS decimal(19,4) ) AS fcurtaxabledistributions,
CAST(FBLNCFC AS smallint ) AS fblncfc,
CAST(FCURTOTALTAXBENEFICIARIES AS decimal(19,4) ) AS fcurtotaltaxbeneficiaries,
CAST(FCURINCOMEAFTEREXPENSES AS decimal(19,4) ) AS fcurincomeafterexpenses,
CAST(FCURTOTALTAXPAYABLE AS decimal(19,4) ) AS fcurtotaltaxpayable,
CAST(FCURSHAREOFOVERSEASTAX AS decimal(19,4) ) AS fcurshareofoverseastax,
CAST(FCURTAXPAYABLEAFTERSHARE AS decimal(19,4) ) AS fcurtaxpayableaftershare,
CAST(FCURSHAREOFIMPUTATION AS decimal(19,4) ) AS fcurshareofimputation,
CAST(FCURTAXPAYABLEAFTERIMPUTATION AS decimal(19,4) ) AS fcurtaxpayableafterimputation,
CAST(FCURSHAREOFRWT AS decimal(19,4) ) AS fcurshareofrwt,
CAST(FCURTAXPAYABLEAFTERRWT AS decimal(19,4) ) AS fcurtaxpayableafterrwt,
CAST(FCURRESIDUALINCOMETAX AS decimal(19,4) ) AS fcurresidualincometax,
CAST(FCURPROVISIONALTAXPAID AS decimal(19,4) ) AS fcurprovisionaltaxpaid,
CAST(FCURTAXAMOUNT AS decimal(19,4) ) AS fcurtaxamount,
CAST(FCUROVERPAYMENTPROVISIONAL AS decimal(19,4) ) AS fcuroverpaymentprovisional,
CAST(FCURREFUNDAFTEROVERPAYMENT AS decimal(19,4) ) AS fcurrefundafteroverpayment,
CAST(FCURTRANSFERPROVISIONAL AS decimal(19,4) ) AS fcurtransferprovisional,
CAST(FCURTRANSFERCUSTOMERAMOUNT AS decimal(19,4) ) AS fcurtransfercustomeramount,
CAST(FCURTOTALREFUND AS decimal(19,4) ) AS fcurtotalrefund,
CAST(FDTMPROVISIONALSTARTDATE AS timestamp ) AS fdtmprovisionalstartdate,
CAST(FSTRPROVISIONALOPTION AS varchar(100) ) AS fstrprovisionaloption,
CAST(FCURPROVISIONALTAX AS decimal(19,4) ) AS fcurprovisionaltax,
CAST(FCUREXCESSIMPUTATIONCREDITS AS decimal(19,4) ) AS fcurexcessimputationcredits,
CAST(FCUREXCESSIMPUTATIONASLOSS AS decimal(19,4) ) AS fcurexcessimputationasloss,
CAST(FCURLOSSTOCARRYFORWARD AS decimal(19,4) ) AS fcurlosstocarryforward,
CAST(FBLNCOMPLYINGTRUST AS smallint ) AS fblncomplyingtrust,
CAST(FBLNFOREIGNTRUST AS smallint ) AS fblnforeigntrust,
CAST(FBLNNONCOMPLYINGTRUST AS smallint ) AS fblnnoncomplyingtrust,
CAST(FSTRWHO AS varchar(20) ) AS fstrwho,
CAST(record_effective_timestamp AS TIMESTAMP) AS fdtmwhen,
CAST(record_effective_timestamp AS TIMESTAMP) AS record_effective_timestamp,
CAST(record_expiry_timestamp AS TIMESTAMP) AS record_expiry_timestamp,
CAST(CURRENT_REC_FLAG AS VARCHAR(1)) AS record_active_flag,
CAST('N' AS VARCHAR(1)) AS record_deleted_flag,
CAST(insert_object_run_key AS INT) AS insert_object_run_key,
CAST(update_object_run_key AS INT) AS update_object_run_key
FROM  ${var:target_db}.${var:tdw_tbl_name}; 

-- Check row counts of RAW tables with TDW history loaded:
select count(*) as raw_new_count from  ${var:target_db}.${var:app_tbl_name};
select count(distinct flngdockey) as distinct_keys_count FROM  ${var:target_db}.${var:app_tbl_name};
select count(*) as low_date_count FROM  ${var:target_db}.${var:app_tbl_name} where record_effective_timestamp = '1800-01-01 00:00:00';
select count(*) as high_date_count FROM  ${var:target_db}.${var:app_tbl_name} where record_expiry_timestamp = '9000-12-31 00:00:00';
