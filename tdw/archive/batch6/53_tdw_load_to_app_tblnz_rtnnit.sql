-- Load data manually from RAW TDW tables into RAW START table
select count(1) from  ${var:target_db}.${var:app_tbl_name};

INSERT INTO TABLE  ${var:target_db}.${var:app_tbl_name} 
SELECT
CAST(z.FLNGDOCKEY AS INT) AS flngdockey,
CAST(z.FCURTAXDEDUCTED AS DECIMAL(19,4)) AS fcurtaxdeducted,
CAST(z.FCURGROSSINCOME AS DECIMAL(19,4)) AS fcurgrossincome,
CAST(z.FCURRWT AS DECIMAL(19,4)) AS fcurrwt,
CAST(z.FCURGROSSINTEREST AS DECIMAL(19,4)) AS fcurgrossinterest,
CAST(z.FCURDIVIDENDIMPUTATION AS DECIMAL(19,4)) AS fcurdividendimputation,
CAST(z.FCURDIVIDENDRWT AS DECIMAL(19,4)) AS fcurdividendrwt,
CAST(z.FCURDIVIDENDGROSS AS DECIMAL(19,4)) AS fcurdividendgross,
CAST(z.FCURMAORICREDITS AS DECIMAL(19,4)) AS fcurmaoricredits,
CAST(z.FCURMAORIDISTRIBUTIONS AS DECIMAL(19,4)) AS fcurmaoridistributions,
CAST(z.FCURTRUSTCREDITS AS DECIMAL(19,4)) AS fcurtrustcredits,
CAST(z.FCURTRUSTINCOME AS DECIMAL(19,4)) AS fcurtrustincome,
CAST(z.FCURTOTALCREDITS AS DECIMAL(19,4)) AS fcurtotalcredits,
CAST(z.FCUROVERSEASTAX AS DECIMAL(19,4)) AS fcuroverseastax,
CAST(z.FCUROVERSEASINCOME AS DECIMAL(19,4)) AS fcuroverseasincome,
CAST(z.FCURBUSINESSACTIVITIES AS DECIMAL(19,4)) AS fcurbusinessactivities,
CAST(z.FCURPREMIUMPAID AS DECIMAL(19,4)) AS fcurpremiumpaid,
CAST(z.FCURPREMIUMPAIDSWITZERLAND AS DECIMAL(19,4)) AS fcurpremiumpaidswitzerland,
CAST(z.FCURTOTALPREMIUM AS DECIMAL(19,4)) AS fcurtotalpremium,
CAST(z.FCUROTHERINCOME AS DECIMAL(19,4)) AS fcurotherincome,
CAST(z.FCURRLWT AS DECIMAL(19,4)) AS fcurrlwt,
CAST(z.FCURTOTALINCOMEPREDONATIONS AS DECIMAL(19,4)) AS fcurtotalincomepredonations,
CAST(z.FCURDONATIONSMADE AS DECIMAL(19,4)) AS fcurdonationsmade,
CAST(z.FCURTOTALINCOME AS DECIMAL(19,4)) AS fcurtotalincome,
CAST(z.FCURNETLOSSBROUGHTFORWARD AS DECIMAL(19,4)) AS fcurnetlossbroughtforward,
CAST(z.FCURNETLOSSCLAIMED AS DECIMAL(19,4)) AS fcurnetlossclaimed,
CAST(z.FCURTOTALINCOMEAFTERNETLOSS AS DECIMAL(19,4)) AS fcurtotalincomeafternetloss,
CAST(z.FCURNETLOSSTOCOMPANIES AS DECIMAL(19,4)) AS fcurnetlosstocompanies,
CAST(z.FCURSUBVENTIONSTOCOMPANIES AS DECIMAL(19,4)) AS fcursubventionstocompanies,
CAST(z.FCURTAXABLEINCOME AS DECIMAL(19,4)) AS fcurtaxableincome,
CAST(z.FCURTOTALTAXPAYABLE AS DECIMAL(19,4)) AS fcurtotaltaxpayable,
CAST(z.FCURTAXAFTEROVERSEAS AS DECIMAL(19,4)) AS fcurtaxafteroverseas,
CAST(z.FCURFOREIGNINVESTORTAXCREDIT AS DECIMAL(19,4)) AS fcurforeigninvestortaxcredit,
CAST(z.FCURTAXAFTERFOREIGNINVESTOR AS DECIMAL(19,4)) AS fcurtaxafterforeigninvestor,
CAST(z.FCURTAXAFTERIMPUTATION AS DECIMAL(19,4)) AS fcurtaxafterimputation,
CAST(z.FCUREXCESSIMPUTATIONCREDITS AS DECIMAL(19,4)) AS fcurexcessimputationcredits,
CAST(z.FCURRESIDUALINCOMETAX AS DECIMAL(19,4)) AS fcurresidualincometax,
CAST(z.FCURPROVISIONALTAXPAID AS DECIMAL(19,4)) AS fcurprovisionaltaxpaid,
CAST(z.FCURTAXAMOUNT AS DECIMAL(19,4)) AS fcurtaxamount,
CAST(z.FBLNRADFILED AS SMALLINT) AS fblnradfiled,
CAST(z.FCURRADAMOUNT AS DECIMAL(19,4)) AS fcurradamount,
CAST(z.FCURRADREFUND AS DECIMAL(19,4)) AS fcurradrefund,
CAST(z.FCURRADLOSS AS DECIMAL(19,4)) AS fcurradloss,
CAST(z.FCURRADTAXADJUSTMENT AS DECIMAL(19,4)) AS fcurradtaxadjustment,
CAST(z.FCURRADREPAYMENTTAX AS DECIMAL(19,4)) AS fcurradrepaymenttax,
CAST(z.FCURTRANSFERPROVISIONAL AS DECIMAL(19,4)) AS fcurtransferprovisional,
CAST(z.FCURTRANSFERCUSTOMERAMOUNT AS DECIMAL(19,4)) AS fcurtransfercustomeramount,
CAST(z.FCURTOTALREFUND AS DECIMAL(19,4)) AS fcurtotalrefund,
CAST(z.FDTMPROVISIONALSTARTDATE AS TIMESTAMP) AS fdtmprovisionalstartdate,
CAST(z.FSTRPROVISIONALOPTION AS VARCHAR(100)) AS fstrprovisionaloption,
CAST(z.FCURPROVISIONALTAX AS DECIMAL(19,4)) AS fcurprovisionaltax,
CAST(z.FBLNNONRESIDENTPAYMENTS AS SMALLINT) AS fblnnonresidentpayments,
CAST(z.FBLNNONRESIDENTWITHHOLDING AS SMALLINT) AS fblnnonresidentwithholding,
CAST(z.FBLNCFC AS SMALLINT) AS fblncfc,
CAST(z.FCURSHARESREPURCHASED AS DECIMAL(19,4)) AS fcursharesrepurchased,
CAST(z.FBLNFOREIGNDIVIDENDS AS SMALLINT) AS fblnforeigndividends,
CAST(z.FBLNNONRESIDENTCONTROLLED AS SMALLINT) AS fblnnonresidentcontrolled,
CAST(z.FBLNNONRESIDENT AS SMALLINT) AS fblnnonresident,
CAST(z.FCURLOWESTECONOMICINTERESTS AS DECIMAL(19,4)) AS fcurlowesteconomicinterests,
CAST(z.FCURLOSSTOCARRYFORWARD AS DECIMAL(19,4)) AS fcurlosstocarryforward,
CAST(z.FBLNLINEITEMSPROCESSED AS SMALLINT) AS fblnlineitemsprocessed,
a.fstrresmethod                  ,
a.fcurresincome                  ,
a.fcurresdeductions              ,
a.fcurresdeductionsprioryear     ,
a.fcurresdeductionsclaimed       ,
a.fcurresnetincome               ,
a.fcurresdeductionsforward       ,
a.fcurrdicarryforwardcurrentyear ,
a.fcurrdirefundablecredit        ,
a.fcurrdicarryforwardremaining   ,
a.fcuraimshareholdertaxpaid      ,
a.fcursaleofproperty             ,
CAST(z.FSTRWHO AS VARCHAR(20)) AS fstrwho,
CAST(z.EFFECTIVE_FROM AS TIMESTAMP) AS FDTMWHEN,
CAST(z.record_effective_timestamp AS TIMESTAMP) AS record_effective_timestamp,
CAST(z.record_expiry_timestamp AS TIMESTAMP) AS record_expiry_timestamp,
CAST(z.record_active_flag AS VARCHAR(1)) AS record_active_flag,
CAST(z.record_deleted_flag AS VARCHAR(1)) AS record_deleted_flag,
CAST(z.insert_object_run_key AS INT) AS insert_object_run_key,
CAST(z.update_object_run_key AS INT) AS update_object_run_key
FROM  ${var:target_db}.${var:tdw_tbl_name} z
left outer join ${var:target_db}.app_tblnz_rtnnit_${var:yyyymmdd} a
on CAST(z.FLNGDOCKEY AS INT)=a.flngdockey
; 

-- Check row counts of RAW tables with TDW history loaded:
select count(*) as raw_new_count from  ${var:target_db}.${var:app_tbl_name};
select count(distinct flngdockey) as distinct_keys_count FROM  ${var:target_db}.${var:app_tbl_name};
select count(*) as low_date_count FROM  ${var:target_db}.${var:app_tbl_name} where record_effective_timestamp = '1800-01-01 00:00:00';
select count(*) as high_date_count FROM  ${var:target_db}.${var:app_tbl_name} where record_expiry_timestamp = '9000-12-31 00:00:00';
